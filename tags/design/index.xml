<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Design on カウル Tech Blog</title>
    <link>http://techblog.housmart.co.jp/tags/design/</link>
    <description>Recent content in Design on カウル Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Wed, 07 Sep 2016 17:54:20 +0900</lastBuildDate>
    <atom:link href="http://techblog.housmart.co.jp/tags/design/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>ちょっとの工夫でスムーズに！iOSアプリ開発のコツ9つ(コーディング・デザイン編)</title>
      <link>http://techblog.housmart.co.jp/2016/09/07/ios-tips-for-developer/</link>
      <pubDate>Wed, 07 Sep 2016 17:54:20 +0900</pubDate>
      
      <guid>http://techblog.housmart.co.jp/2016/09/07/ios-tips-for-developer/</guid>
      <description>

&lt;p&gt;ショッピングアプリでの経験や&lt;a href=&#34;https://developer.apple.com/ios/human-interface-guidelines/&#34;&gt;iOSガイドライン&lt;/a&gt;(または&lt;a href=&#34;https://material.google.com/&#34;&gt;マテリアルデザイン&lt;/a&gt;)から学んだiOS開発のプラクティスをまとめてみました。&lt;br /&gt;
弊社より8月30日にリリースした&lt;a href=&#34;https://itunes.apple.com/app/id1143903849&#34;&gt;カウルのアプリ&lt;/a&gt;開発でとった対応も併記しています。&lt;/p&gt;

&lt;p&gt;iOSアプリ開発で意識すべきポイントは、チームやコミュニティの中では共有されているものの、まとまった情報を得ることがなかなか難しいかと思います。&lt;br /&gt;
&lt;strong&gt;これから企業でiOSアプリを初めて開発するエンジニア&lt;/strong&gt; な方々の参考になれば幸いです。&lt;/p&gt;

&lt;p&gt;「サービス・システム設計」の観点から新規アプリ開発において意識すべきポイントはこちらの記事にまとめています。&lt;br /&gt;
&lt;a href=&#34;http://techblog.housmart.co.jp/2016/09/01/ios-development-tips/&#34;&gt;「iPhoneアプリを作り始める前に考えておきたい5つのこと」&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#coding&#34;&gt;コーディング&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#coding1&#34;&gt;1.Storyboardを積極的に利用する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#coding2&#34;&gt;2.SchemeとPreprocessor Macrosを使って環境を切り分ける&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#coding3&#34;&gt;3.UIWebViewは使わずにWKWebViewやSFSafariViewを使う&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#coding4&#34;&gt;4.Custom URL schemeやUniversal Links、WKScriptMessageHandlerでwebとネイティブを繋ぐ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#coding5&#34;&gt;5.こまめにプルリクエストをマージする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#coding6&#34;&gt;6.ベータ版を定期的に社内配信する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#design&#34;&gt;デザイン&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#design1&#34;&gt;1.滑らかにアニメーションさせる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#design2&#34;&gt;2.UI要素のレイアウトを揃える&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#design3&#34;&gt;3.web処理を意識させない&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;div id=&#34;coding&#34;/&gt;&lt;/p&gt;

&lt;h2 id=&#34;コーディング&#34;&gt;コーディング&lt;/h2&gt;

&lt;p&gt;&lt;div id=&#34;coding1&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;1-storyboardを積極的に利用する&#34;&gt;1.Storyboardを積極的に利用する&lt;/h3&gt;

&lt;p&gt;UI要素はコードだけで生成することもできますが、Storyboardを積極的に使って実装すると、実行時の画面の状態がプレビューできるので新しくプロジェクトに関わる人がいても理解がしやすくなります。&lt;/p&gt;

&lt;p&gt;一方でデメリットは、AutoLayoutとConstraintsの挙動を覚える必要があること、複数人で同じStoryboardを編集する際にGit上でコンフリクトすることが挙げられます。&lt;br /&gt;
Storyboardを分割しておくことでコンフリクトは極力減らせます。&lt;/p&gt;

&lt;p&gt;またStoryboardから変更できないようなUI要素については、&lt;code&gt;IBDesignable&lt;/code&gt;を使って拡張します。&lt;br /&gt;
例えばカウルでは&lt;code&gt;IBDesignable&lt;/code&gt;を使ってStoryboardからボタンの角丸を変更できるようにしつつ、各種ボタンに一定の丸みを持たせるようにしています。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;coding2&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-schemeとpreprocessor-macrosを使って環境を切り分ける&#34;&gt;2.SchemeとPreprocessor Macrosを使って環境を切り分ける&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Debug&lt;/code&gt;、&lt;code&gt;Release&lt;/code&gt;以外にも&lt;code&gt;Staging&lt;/code&gt;のようなスキームも定義して、プリプロセッサマクロで以下のような処理をビルド毎に切り分けます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;APIの接続先&lt;/li&gt;
&lt;li&gt;クラッシュトラッキングやアナリティクスのON/OFF&lt;/li&gt;
&lt;li&gt;データのキャッシュ時間&lt;/li&gt;
&lt;li&gt;・・などなど&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;本番(または開発中)のバージョンにだけ出したい機能・設定の切り分けに使いましょう。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;coding3&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;3-uiwebviewよりwkwebviewやsfsafariviewを使う&#34;&gt;3.UIWebViewよりWKWebViewやSFSafariViewを使う&lt;/h3&gt;

&lt;p&gt;UIWebViewよりWKWebViewの方が、描画が速く、クラッシュも少なく安定します。&lt;br /&gt;
SFSafariViewはカスタマイズできる部分が少なくなりますが、SafariアプリとCookie等が共有されるので自分のサービス外のURLを開く際などに使うとユーザにとって便利です。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;coding4&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;4-custom-url-schemeやuniversal-links-wkscriptmessagehandlerでwebとネイティブを繋ぐ&#34;&gt;4.Custom URL schemeやUniversal Links、WKScriptMessageHandlerでwebとネイティブを繋ぐ&lt;/h3&gt;

&lt;p&gt;3つを主に以下のような用途で使い分けて、webとネイティブを繋ぎます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;カスタムURLスキーム: Safari等からアプリへの遷移。&lt;code&gt;kawlu://&lt;/code&gt;のようなURLでアプリを起動してくれます。&lt;/li&gt;
&lt;li&gt;ユニバーサルリンク: Safari等からアプリへの遷移。&lt;code&gt;https://kawlu.com&lt;/code&gt;のようなURLでアプリを直接起動してくれます。&lt;/li&gt;
&lt;li&gt;WKScriptMessageHandler: アプリ内のWebViewからアプリへの情報渡し。JavaScriptからWebView内に処理を渡してくれます。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;カウルではユニバーサルリンク中心に利用する予定でしたが、このブログを書いている時点では &lt;strong&gt;Safari以外のアプリでリダイレクトリンクを踏んだ際は作動しない&lt;/strong&gt; という挙動があったためカスタムURLスキームも利用しています。&lt;br /&gt;
以下が具体的にユニバーサルリンクが作動しない事例です。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;トラッキングのためSendgrid経由でメールを送る&lt;/li&gt;
&lt;li&gt;ユーザがGmailアプリでメール開いてリンクをクリックする&lt;/li&gt;
&lt;li&gt;リンクはSendgridドメインを経由するリダイレクトになっており、ユニバーサルリンクが作動しない&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;div id=&#34;coding5&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;5-こまめにプルリクエストをマージする&#34;&gt;5.こまめにプルリクエストをマージする&lt;/h3&gt;

&lt;p&gt;複数人で開発を行っているとpbxprojファイルやStoryboardが、コンフリクトして解消に時間を取られるので、プルリクエストを長い間放置しないようしてコンフリクトを減らします。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;coding6&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;6-ベータ版を定期的に社内配信する&#34;&gt;6.ベータ版を定期的に社内配信する&lt;/h3&gt;

&lt;p&gt;動作確認をしたり、認識を合わせる上で一番良いのは実際にアプリをデバイスにインストールして使ってもらうことです。&lt;br /&gt;
インストールしたくなる度にMacにiPhoneをUSB接続するのでは効率が悪いため、&lt;a href=&#34;http://try.crashlytics.com/beta/&#34;&gt;Crashlytics Beta&lt;/a&gt;等のツールからいつでも関係者がインストールできるようにします。&lt;/p&gt;

&lt;p&gt;カウルの開発では帰宅時に最新版のビルドを配信するようにしていました。&lt;br /&gt;
今後は&lt;a href=&#34;https://fastlane.tools/&#34;&gt;fastlane&lt;/a&gt;などを利用して、新しいコミットがある度に自動配信できるようにしようと検討中です。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;design&#34;/&gt;&lt;/p&gt;

&lt;h2 id=&#34;デザイン&#34;&gt;デザイン&lt;/h2&gt;

&lt;p&gt;基本的には、標準的なiOSのUI要素を使いつつ、アプリ内での一貫性を重視するようにします。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;design1&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;1-滑らかにアニメーションさせる&#34;&gt;1.滑らかにアニメーションさせる&lt;/h3&gt;

&lt;p&gt;要素が現れたり消えたり、移動する際に滑らかにアニメーションするようにします。&lt;br /&gt;
また、時間がかかる処理をしている間はユーザに「読み込みしている」ということを分かるようにします。&lt;/p&gt;

&lt;p&gt;見た目のカッコ良さだけでなく、直前のタップやスクロールという動作から次のアクションへの繋がりが見えるようアニメーションを利用することを心がけます。&lt;/p&gt;

&lt;p&gt;画面描画が重たくなる場合、ユーザに見えていない部分の要素の描画がされてることもあるので&lt;a href=&#34;https://developer.apple.com/library/ios/documentation/ToolsLanguages/Conceptual/Xcode_Overview/ExaminingtheViewHierarchy.html&#34;&gt;描画中のビューを見てデバッグする&lt;/a&gt;のが有効です。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;design2&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-ui要素のレイアウトを揃える&#34;&gt;2.UI要素のレイアウトを揃える&lt;/h3&gt;

&lt;p&gt;UI要素のサイズには、標準的なiOSのUI要素がもともと持っているサイズを使うか、サービス内で定義したサイズを使うことで、iOSやサービスの一部として馴染むようにします。&lt;/p&gt;

&lt;p&gt;例えば、ボタン等のタッチ領域は&lt;a href=&#34;https://developer.apple.com/ios/human-interface-guidelines/visual-design/layout/&#34;&gt;44pt以上&lt;/a&gt;にするようにしたり、サービス内で独自に定義するサイズは&lt;a href=&#34;https://material.google.com/layout/metrics-keylines.html&#34;&gt;8の倍数&lt;/a&gt;を使います。&lt;/p&gt;

&lt;p&gt;他にも角丸を統一したり、色についても&lt;a href=&#34;http://qiita.com/furuyan/items/1144b99e4c01c6a6ae27&#34;&gt;サービス用のパレットを追加&lt;/a&gt;したり、定数化して統一化します。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;design3&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;3-web処理を意識させない&#34;&gt;3.web処理を意識させない&lt;/h3&gt;

&lt;p&gt;アプリ内で同一サービスのwebページを開く際、それがwebビューであるかどうかユーザが認識する必要はありません。&lt;/p&gt;

&lt;p&gt;具体的にカウルでは、「戻る」ボタンをタップした際や、画面左からのスワイプをした際に、一貫して「直前まで見ていたものに戻る」ために以下のような処理をしています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;webViewであれば、1ページ前に戻る&lt;/li&gt;
&lt;li&gt;webViewでなければ、1つ前のviewに戻る&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;ここに書いてあることはカウルの開発で実施していることの一部です。是非みなさんの意見や、やり方も教えていただけると幸いです！&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://kawlu.com/market&#34;&gt;カウル&lt;/a&gt;のアプリは&lt;a href=&#34;https://itunes.apple.com/app/id1143903849&#34;&gt;こちら&lt;/a&gt;です。基本料無料で使えますので、是非ご利用ください！&lt;br /&gt;
&lt;a href=&#34;https://itunes.apple.com/app/id1143903849&#34;&gt;https://itunes.apple.com/app/id1143903849&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by まっくす&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【2016年夏】iPhoneアプリを作り始める前に考えておきたい5つのこと</title>
      <link>http://techblog.housmart.co.jp/2016/09/01/ios-development-tips/</link>
      <pubDate>Thu, 01 Sep 2016 15:54:20 +0900</pubDate>
      
      <guid>http://techblog.housmart.co.jp/2016/09/01/ios-development-tips/</guid>
      <description>

&lt;p&gt;「iPhoneアプリ作る前に考慮しておくべきことってなんだろう？」&lt;br /&gt;
こんな疑問を開発前に持つ方向けに、「サービス・システム設計」の観点から新規アプリ開発において意識すべきポイントをまとめました。&lt;/p&gt;

&lt;p&gt;また、弊社より8月30日にリリースした&lt;a href=&#34;https://itunes.apple.com/app/id1143903849&#34;&gt;カウルのアプリ&lt;/a&gt;開発でとった対応も併記しています。&lt;br /&gt;
過去に携わっていたショッピングアプリでの経験や、先輩アプリエンジニアの方々に教えていただいたことをベースとしています。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;企業でiOSアプリを初めて開発するエンジニア&lt;/strong&gt; や &lt;strong&gt;作る機能・スケジュールを決めるプロダクトオーナー&lt;/strong&gt; といった方々の判断の材料になれば幸いです。&lt;/p&gt;

&lt;p&gt;エンジニア視点でのスムーズなiOSアプリ開発のためのポイントはこちらにまとめています。&lt;br /&gt;
&lt;a href=&#34;http://techblog.housmart.co.jp/2016/09/06/ios-tips-for-developer/&#34;&gt;ちょっとの工夫でスムーズになるiOSアプリ開発のコツ9つ(コーディング・デザイン編)&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#service&#34;&gt;サービス・システム設計で考えておきたい5つのこと&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#service2&#34;&gt;1.ユーザにアプリアップデートを促す仕組み&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#service3&#34;&gt;2.webからアプリへのインストールの導線&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#service1&#34;&gt;3.対応デバイス選定&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#service4&#34;&gt;4.Appleの審査でリジェクトされることも想定した締切&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#other1&#34;&gt;5.クラッシュのトラッキング等に使うプラットフォームの選定&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#other&#34;&gt;カウルアプリの中の話&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#other2&#34;&gt;今回のリリースに含めなかった対応&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#other3&#34;&gt;開発にかかったコスト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;div id=&#34;service&#34;/&gt;&lt;/p&gt;

&lt;h2 id=&#34;サービス-システム設計で意識しておきたい5つのこと&#34;&gt;サービス・システム設計で意識しておきたい5つのこと&lt;/h2&gt;

&lt;p&gt;web開発と異なる部分として、プッシュ通知などアプリならではの考慮しておくと良いことがあります。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;service2&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;1-ユーザにアプリアップデートを促す仕組み&#34;&gt;1.ユーザにアプリアップデートを促す仕組み&lt;/h3&gt;

&lt;p&gt;APIのバージョンを上げる際、バージョンアップ前のAPIに合わせて実装されていたアプリが動かなくなる可能性があります。&lt;br /&gt;
旧バージョンのAPIを使うアプリが残っていると、複数バージョンのAPIを運用していく必要がありますが、運用コストやセキュリティ等の理由で旧バージョンのAPIを閉じる必要も出てくるでしょう。&lt;br /&gt;
ですので、特定バージョンのアプリにアップデートを促す仕組みを導入できていると将来的な運用コストを抑えることができます。&lt;/p&gt;

&lt;p&gt;カウルでは&lt;a href=&#34;https://firebase.google.com/docs/remote-config/&#34;&gt;Firebase Remote Config&lt;/a&gt;を使用して、通知が必要なバージョンのアプリを管理するようにしています。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;service3&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-webからアプリへのインストールの導線&#34;&gt;2.webからアプリへのインストールの導線&lt;/h3&gt;

&lt;p&gt;アプリをリリースした後の、webからのアプリをインストールさせるための導線についても考えておきます。&lt;/p&gt;

&lt;p&gt;カウルではランディングページへアクセスした際に&lt;a href=&#34;https://developer.apple.com/library/ios/documentation/AppleApplications/Reference/SafariWebContent/PromotingAppswithAppBanners/PromotingAppswithAppBanners.html&#34;&gt;Smart App Banners&lt;/a&gt;を出すようにしつつ、web版への登録ステップも残すことにしました。&lt;br /&gt;
また、未対応のiOSバージョンの端末にはSmart App Bannersのメタタグを出さないようにしています。&lt;br /&gt;
ユーザの使用状況に応じて、インストールの導線を追加していくことも検討しています。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;service1&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;3-対応デバイス選定&#34;&gt;3.対応デバイス選定&lt;/h3&gt;

&lt;p&gt;対応デバイスとOSのバージョンを決めます。&lt;br /&gt;
カウルでは開発コストを抑えるため以下に絞りました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;iPhoneのみ対応(ローテーションの対応は無し)&lt;/li&gt;
&lt;li&gt;iOS9以降対応&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最新のiOS2バージョンをサポートすることが推奨です。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;service4&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;4-appleの審査でリジェクトされることも想定した締切&#34;&gt;4.Appleの審査でリジェクトされることも想定した締切&lt;/h3&gt;

&lt;p&gt;初回の審査ではリジェクトされる可能性が十分にあるので、余裕をもって審査に出します。&lt;/p&gt;

&lt;p&gt;これまで &lt;strong&gt;1週間程度かかっていたレビューが短縮されて、現在は1日程度になっている&lt;/strong&gt; ようです。&lt;/p&gt;

&lt;p&gt;カウルではメッセージのやりとり・指摘箇所の修正時間も見込んで2週間程のバッファを用意しました。&lt;br /&gt;
実際、カウルアプリの審査においても決済周りの説明や確認のやりとりに時間を使いました。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;other1&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;5-クラッシュのトラッキング等に使うプラットフォームの選定&#34;&gt;5.クラッシュのトラッキング等に使うプラットフォームの選定&lt;/h3&gt;

&lt;p&gt;リリース後のクラッシュの検知や、プッシュ通知を送るためのプラットフォームを選びます。&lt;br /&gt;
特にクラッシュ検知ツールはお金もかからず、実装に時間もかからないので何かしらいれておきましょう。&lt;/p&gt;

&lt;p&gt;カウルの開発では以下のツール群を導入して、クラッシュ検知やプッシュ通知を実装しています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://get.fabric.io/&#34;&gt;Fabric&lt;/a&gt;関連のツール&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://fabric.io/kits/ios/answers&#34;&gt;Answers&lt;/a&gt;&lt;br /&gt;
アプリ起動状態のトラッキングをするツール&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://try.crashlytics.com/beta/&#34;&gt;Beta&lt;/a&gt;&lt;br /&gt;
開発途中のアプリを関係者に配信してテストするためのツール&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://fabric.io/kits/ios/crashlytics&#34;&gt;Crashlytics&lt;/a&gt;&lt;br /&gt;
アプリのクラッシュを検知するツール&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://firebase.google.com/&#34;&gt;Firebase&lt;/a&gt;関連のツール&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/analytics/&#34;&gt;Analytics&lt;/a&gt;&lt;br /&gt;
アプリ起動状態のトラッキングをするツール&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/notifications/&#34;&gt;Notifications&lt;/a&gt;&lt;br /&gt;
プッシュ通知を送るためのツール&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/remote-config/&#34;&gt;Remote Config&lt;/a&gt;&lt;br /&gt;
設定をリモートから配信するためのツール(A/Bテスト等に使える)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;div id=&#34;other&#34;/&gt;&lt;/p&gt;

&lt;h2 id=&#34;カウルアプリの中の話&#34;&gt;カウルアプリの中の話&lt;/h2&gt;

&lt;p&gt;&lt;div id=&#34;other2&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;今回のリリースに含めなかった対応&#34;&gt;今回のリリースに含めなかった対応&lt;/h3&gt;

&lt;p&gt;我々は以下のタスクを次のリリースに見送りましたが、スケジュール次第では可能な限り先に対応しておけると素敵です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;アナリティクスや既存のログ分析基盤との統合(&lt;a href=&#34;http://techblog.housmart.co.jp/2016/04/17/log-platform-for-startup/&#34;&gt;カウルのログ分析基盤について&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;自動テストの拡充&lt;/li&gt;
&lt;li&gt;CI・自動デプロイの環境拡充&lt;/li&gt;
&lt;li&gt;ASO(App Store Optimization)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;div id=&#34;other3&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;開発にかかったコスト&#34;&gt;開発にかかったコスト&lt;/h3&gt;

&lt;p&gt;JIRAの記録(&lt;a href=&#34;http://techblog.housmart.co.jp/2016/08/24/startup-dev/&#34;&gt;カウルの作業時間記録について&lt;/a&gt;)によると、1.5人月(240時間)ほどの作業時間を使いました。作業内容としては以下の様なタスクを含みます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;アプリ実装&lt;/li&gt;
&lt;li&gt;API修正(プッシュ通知の組み込みなど)&lt;/li&gt;
&lt;li&gt;モバイルwebのUI修正&lt;/li&gt;
&lt;li&gt;ミーティングやアップル審査の調整&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;ここに書いてあることはカウルの開発で実施していることの一部です。是非みなさんの意見や、やり方も教えていただけると幸いです！&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://kawlu.com/market&#34;&gt;カウル&lt;/a&gt;のアプリは&lt;a href=&#34;https://itunes.apple.com/app/id1143903849&#34;&gt;こちら&lt;/a&gt;です。基本料無料で使えますので、是非ご利用ください！&lt;br /&gt;
&lt;a href=&#34;https://itunes.apple.com/app/id1143903849&#34;&gt;https://itunes.apple.com/app/id1143903849&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by まっくす&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>イノベーションにおけるデザインの役割 - Design for Innovation 2016 参加レポート</title>
      <link>http://techblog.housmart.co.jp/2016/05/24/design-for-innovation-2016/</link>
      <pubDate>Tue, 24 May 2016 09:18:46 +0900</pubDate>
      
      <guid>http://techblog.housmart.co.jp/2016/05/24/design-for-innovation-2016/</guid>
      <description>

&lt;p&gt;Housmart高松です。&lt;/p&gt;

&lt;p&gt;最近、ビジネスの世界でデザインの重要性が増してきているという話を良く聞くようになってきたのではないでしょうか？&lt;/p&gt;

&lt;p&gt;5/17に品川の Microsoft のオフィスでシリコンバレーのデザイン会社である btrax 主催のイベント &lt;strong&gt;「Design for Innovation 2016」&lt;/strong&gt; が開催されました。&lt;br /&gt;
今回このイベントに参加してきたので、簡単な参加レポートと雑感をまとめます。&lt;/p&gt;

&lt;h2 id=&#34;design-design&#34;&gt;「DESIGN ≠ Design」&lt;/h2&gt;

&lt;p&gt;btrax の Brandon CEO のオープニングでの言葉です。&lt;/p&gt;

&lt;p&gt;日本でデザインというと、見た目を美しくする仕事、きれいなチラシを作ったりWebページのHTMLやCSSを作ってくれるいわゆる「デザイナーさん」のことをイメージしがちです。それは狭義の意味での小文字の&amp;rdquo;Design&amp;rdquo;。&lt;br /&gt;
一方で、 &lt;strong&gt;世の中の様々な事柄をデザイン的な感性とアプローチで改善していこう&lt;/strong&gt; というのがより広義な意味での &lt;strong&gt;大文字の&amp;rdquo;DESIGN&amp;rdquo;&lt;/strong&gt; 。&lt;/p&gt;

&lt;p&gt;この２つの意味は明確に違います。&lt;br /&gt;
そして、この大文字のDESIGNの重要度がシリコンバレーでも急速に高まってきているそうです。&lt;/p&gt;

&lt;p&gt;この背景を受けて、アメリカ西海岸でのケーススタディと体験型ワークショップを通してデザインの重要性を体感しようというのが今回のイベントの趣旨でした。&lt;/p&gt;

&lt;h3 id=&#34;イベントの流れ&#34;&gt;イベントの流れ&lt;/h3&gt;

&lt;p&gt;午前中は最近のデザインの盛り上がりの中でもキーワードとしてよく取り上げられている &lt;strong&gt;&amp;ldquo;Design Thinking&amp;rdquo;を体験するワークショップ&lt;/strong&gt; があり、&lt;br /&gt;
午後は &lt;strong&gt;シリコンバレーのスタートアップやデザインを積極的に取り入れている日本企業を招いてのトークセッション&lt;/strong&gt; という二部構成でした。&lt;/p&gt;

&lt;p&gt;午前中のワークショップは50名程度、午後のトークセッションは200名程度が参加し立ち見が出るほどの大盛況でした。(午前午後ともにキャンセル待ちの方もたくさん居たようです)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/LtKoIc5RyMHF2G7NBzf4UebbXTQ-Gcgms6bqXHNdevajqpjhwY5QfS_L4N1g12oo7g6n8eGBghnAncmbg-BC4Jk2KybJU1egg9swx_iKnL2t6ZMZvYatlYFFC0cReochRbz8ySxxn1AgdeMUqk1zKrb1Xs027Vsa7K6qF2uh0-Il4hLzqO8qKJZT5YxU41k3zZFk4ZoECzrGz_722fURgbGFKe6tMG3cCTCFfq9_NcdgyQArfKF_UYaaz4BwE9zwODZaxtTPlGdqowVzPsAiBxUc5-57xkoJyhF-iSLMWV54sr9B79V3KWW0AXbPxhoyXOBbtelVPskfPcUia6uq7HvRbMnEgbpUUSk68Ow9zL9Lpy91x7hGnqUISmhx7Br2wXVs7DV7SfszhuHQMqzBJUzaT_wR7SKBufPX8E3EzuOTi2t4N4hy-GwUs1lpn6ypLRtgqL8iNytX6ckxO9Eh9L5EBtTMH8ZEjSQBHbT6Y2TFMtyT5ozel_doqVItDfJ42huGtBzWGw9wUat7Yf9Tjt7jsf5t6G-KYmpEXjqmaaq3B0xve8zgWOGqPFlBXibLNCZxIvqnNwtgY6rocTkLgdjBcwDbAUs=w1068-h801-no&#34; title=&#34;design_for_innovation_room&#34; width=&#34;60%&#34;&#34;&gt;&lt;/p&gt;

&lt;h2 id=&#34;design-thinking-とは&#34;&gt;Design Thinking とは？&lt;/h2&gt;

&lt;p&gt;「Design Thinking（デザイン思考）」とは、 &lt;strong&gt;デザイナーがデザインする時に用いるアプローチ&lt;/strong&gt; のことです。&lt;br /&gt;
ヒアリングや調査などを通して課題の本質を見極め、その課題を元にアイデアをたくさん出し（発散させ）、その中から良いアイデアを選びつつ、それらを磨いていくというプロセスをたどります。&lt;/p&gt;

&lt;p&gt;このプロセスの中心にユーザを置き、課題を定義したりアイデアをブラッシュアップする段階でユーザインタビューなどを通してフィードバックを行うことを &lt;strong&gt;HCD（ヒューマン・センタード・デザイン）&lt;/strong&gt; などと呼ぶようです。&lt;/p&gt;

&lt;p&gt;この一般的にデザイナーが行っているプロセスを、ビジネスやサービスの立ち上げ・改善に応用していくことでよりよいモノを作れるのではないか、というのが近年デザイン思考が取り上げられている背景です。&lt;/p&gt;

&lt;p&gt;ただ、このあたりの言葉の定義はまだ曖昧なので、より正確な情報を求める人は以下のブログや書籍などを参照されると良いかと思います。&lt;/p&gt;

&lt;p&gt;(ブログ) &lt;a href=&#34;http://blog.btrax.com/jp/2013/06/02/d-thinking/&#34;&gt;btrax - 【やっぱりよくわからない】デザイン思考ってなに？&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(書籍) 誰のためのデザイン？&lt;br /&gt;
&lt;iframe src=&#34;http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=housmart-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=478850362X&#34; style=&#34;width:120px;height:240px;&#34; scrolling=&#34;no&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;h3 id=&#34;1000-songs-in-your-pocket&#34;&gt;1000 SONGS IN YOUR POCKET&lt;/h3&gt;

&lt;p&gt;新しいサービスやプロダクトは、「事柄・物事」を「何か新しい方法」で提供することで「価値」を生み出しています。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WHAT + HOW = VALUE&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;たとえばmp3プレーヤーの例でいうと、&lt;br /&gt;
よりエンジニア的な視点から価値の定義で言うと、「小型化」「大容量化」の様なワードが並ぶことが多いかと思います。&lt;/p&gt;

&lt;p&gt;そこでデザイン思考的なアプローチでmp3プレーヤーが提供する価値を再定義してみます。&lt;br /&gt;
ユーザが本当に求めていることはなんだろう、本当に提供しなければいけない価値はなんだろうという視点で価値を定義し直すと「もっと自由に音楽を楽しめること」という、より抽象的な言葉に置き換えることができます。&lt;/p&gt;

&lt;p&gt;その定義の上でHOWを考えなおす、そんなアプローチでかの有名なiPodは生まれました。&lt;br /&gt;
mp3の機能的な向上だけを追い求めるのではなく、iTunesという音楽を自由にとり込んだり管理することができるプラットフォームとともに提供する、というHOWにたどり着きました。&lt;/p&gt;

&lt;p&gt;その結果、iPodの価値を表すためのコピーは &amp;ldquo;STORAGE FOR 1GB OF MP3s&amp;rdquo; ではなく&lt;br /&gt;
&lt;strong&gt;&amp;ldquo;1000 SONGS IN YOUR POCKET&amp;rdquo;&lt;/strong&gt;&lt;br /&gt;
となります。&lt;/p&gt;

&lt;p&gt;どちらの方がユーザにとって良い価値を提供してくれそうでしょうか？&lt;/p&gt;

&lt;h3 id=&#34;design-thinking-ワークショップ&#34;&gt;Design Thinking ワークショップ&lt;/h3&gt;

&lt;p&gt;午前中のセッションではこの &amp;ldquo;Design Thinking&amp;rdquo; をコーチのもとで実際に体験することができました。
今回のお題は「プレゼントをあげる体験をリデザインする」。隣の方とペアになって Design Thinking の実際のプロセスを体験しました。&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Design Thinking&amp;rdquo; という言葉自体は以前から知ってはいたのですが、実際にやってみることでかなり具体的なイメージを手に入れることができました。&lt;/p&gt;

&lt;p&gt;実際の業務でも、たとえば &lt;strong&gt;Webサイトの新機能の企画や設計に大いに使えるフレームワーク&lt;/strong&gt; だと感じました。&lt;/p&gt;

&lt;p&gt;かの有名なデザイン会社 IDEO の Tim Brown も &lt;strong&gt;「デザイン思考は実践が大事だ」&lt;/strong&gt; と言っているように、やってみることで威力を体感できるのではないかと思います。（btraxさんは定常的にデザイン思考を体験できるセミナーをサンフランシスコのオフィスで開催しているそうです。）&lt;/p&gt;

&lt;h2 id=&#34;トークセッション&#34;&gt;トークセッション&lt;/h2&gt;

&lt;p&gt;午後のトークセッションでは、国内外から13名のスピーカーが招待され、全部で6セッション計5時間という濃密なものでした。&lt;/p&gt;

&lt;p&gt;各参加者ともそれぞれの立場から「何の目的で」「どうやって」デザイン（もしくはデザイナー）をプロダクトの開発・改善プロセスに組み込んでいるかをお話されていました。&lt;/p&gt;

&lt;p&gt;中でも気になったトピックについていくつかまとめていきます。&lt;/p&gt;

&lt;h3 id=&#34;airbnb-のリブランディング&#34;&gt;Airbnb のリブランディング&lt;/h3&gt;

&lt;p&gt;Startups and Designのセッションで、Design Studio のプリンシパルである　John Creson 氏が Airbnb のリブランディングを行った事例を紹介していました。&lt;/p&gt;

&lt;p&gt;最近では &amp;ldquo;良いサービス&amp;rdquo; の代表格としてあげられる Airbnb。いつも見慣れたロゴが生まれた背景を聞けてとても勉強になりました。&lt;/p&gt;

&lt;p&gt;リブランディングの過程で、デザインチームが Airbnb を実際に利用して世界各国でホストに会う経験を通してリブランディング作業にあたったことや、Humanize というコンセプトを大事にしていたことなどを語ってくれていました。&lt;/p&gt;

&lt;p&gt;中でも、リブランディングにあたって作成したムービーを一般公開前に Airbnb の社員に見てもらうことで、 &lt;strong&gt;組織の中に対するブランディングにも貢献した&lt;/strong&gt; 、という話が印象的でした。&lt;br /&gt;
急速に成長して人員も増えていくスタートアップにとって、シンボル的な役割を果たすロゴ、またそのロゴが生まれた背景をこのような方法で浸透させていくことは、会社独自の文化を醸成していくうえで非常に効果的な方法だと思いました。&lt;br /&gt;
良い文化が良いブランドをつくる (Good culture creates good brand) と、会社の文化の重要性についても触れていました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=nMITXMrrVQU&#34;&gt;&lt;img src=&#34;http://img.youtube.com/vi/nMITXMrrVQU/0.jpg&#34; alt=&#34;Airbnb introduces the Bélo&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;※Airbnbのリブランディングについて&lt;a href=&#34;http://nature-dot.com/journal/design/174&#34;&gt;こちら&lt;/a&gt;の記事が参考になったのでご興味ある方はどうぞ&lt;/p&gt;

&lt;h3 id=&#34;大手金融機関のデザイン会社買収&#34;&gt;大手金融機関のデザイン会社買収&lt;/h3&gt;

&lt;p&gt;同じセッションでアメリカの大手金融会社の Capital One からもデザインマネージャの方が参加されていました。&lt;/p&gt;

&lt;p&gt;Capital One は大手金融会社であるにも関わらず、2014年に Adaptive Path という超名門のデザイン会社を買収したことで知られています。日本ではなかなか想像できないですよね。&lt;/p&gt;

&lt;p&gt;これが象徴するのは、もはやUXの良さがビジネスの良し悪しに直結することは欧米では当然のこととして受け入れられているということだと思います。&lt;br /&gt;
経営においてのデザインの価値が認知されると、次は優秀なデザイナーをいかにして確保するかという話になるのは自然な流れです。&lt;/p&gt;

&lt;p&gt;そんな中でも超一流のデザイン会社を会社ごと買収するという、金額的にも大きな決断をしたことで、どれほどデザインを重要視しているかが伝わってくる象徴的な出来事だと思いました。&lt;/p&gt;

&lt;h3 id=&#34;the-future-of-agency-services&#34;&gt;The Future of Agency Services&lt;/h3&gt;

&lt;p&gt;もう一つ印象に残ったのは、経営の中でデザインの重要性が上がってくる中で、コンサル会社・広告代理店・デザイン会社の事業領域がぶつかってきているというトピックです。&lt;br /&gt;
btrax の Brandon CEO、dentsuの森氏、デザイン会社INFOBAHNの井登氏が登壇されていました。&lt;/p&gt;

&lt;p&gt;このトピックでも象徴的な出来事が今年2016年にありました。博報堂DYホールディングスによるシリコンバレーのデザイン会社 IDEO の買収です。&lt;br /&gt;
IDEO はデザイン会社の中でもリーディングカンパニーと言われる会社です。広告系の会社がデザイン会社最大手を買収するというインパクトはとてつもないものだったようです。&lt;/p&gt;

&lt;p&gt;btrax の Brandon CEO もこのセッションの中で「ここ2-3年で日本の企業からのリクエストの質も量も格段に上がってきた。課題の理解からアイデア出し、アイデアの実行をして改善のサイクルを回していくような包括的なリクエストが増えてきた」と言っていました。&lt;br /&gt;
このように事業戦略の中でデザイン会社の存在感が増していくことで、現場でもお互いに相手を意識するタイミングが増えてきたと語っていました。&lt;/p&gt;

&lt;h2 id=&#34;まとめと雑感&#34;&gt;まとめと雑感&lt;/h2&gt;

&lt;p&gt;ビジネスを創っていくプロセス、とりわけアイデアを形にするSeedのフェーズにDESIGNを取り込んでいく必要があることはもはや動かしがたい事実であると、今回のイベントを通して強く再認識しました。&lt;/p&gt;

&lt;p&gt;私達がDESIGNをビジネスに取り込んでいくためには大きく2つのアプローチがあるかと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;非デザイナーがデザイン思考を身につける&lt;/li&gt;
&lt;li&gt;デザイナーをビジネスプロセスの中に巻き込んでいく&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;そして、これらはどちらか一方というわけではなく、組織の状況に応じて両方のアプローチから達成する必要があると今回の様々な事例を聞いて感じました。&lt;/p&gt;

&lt;h3 id=&#34;アジャイルがエンジニアにもたらした意味&#34;&gt;アジャイルがエンジニアにもたらした意味&lt;/h3&gt;

&lt;p&gt;突然話が飛ぶのですが、この&amp;rdquo;DESIGN&amp;rdquo;の流れはアジャイルがエンジニアにもたらした意味と似ている気がしています。&lt;br /&gt;
&lt;strong&gt;エンジニアとビジネス上の意思決定を近づけたこと&lt;/strong&gt; がアジャイルの貢献のうちの一つだと思います。&lt;/p&gt;

&lt;p&gt;弊社ではエンジニアもビジネス上の意思決定にしっかり入り込んでアジャイルを回しています。(そして、今のところとてもうまく行っています)&lt;br /&gt;
弊社以外でも、ことスタートアップ界隈ではエンジニア上がりのプロダクトマネージャーがKPIを元にビジネス上の意思決定をしている例をたくさん耳にするようになってきました。&lt;br /&gt;
このシナジーがどれほど素晴らしいものかは私が今ここで言う必要もないほど語り尽くされていると思います。みなさんも耳にしたことがあるはずです。&lt;/p&gt;

&lt;p&gt;一方で、ことデザイナーという仕事に関してはまだまだ「デザイナーさん」として扱っている組織のほうが多いのが現状ではないでしょうか？&lt;/p&gt;

&lt;h3 id=&#34;デザイナーをチームに加える&#34;&gt;デザイナーをチームに加える&lt;/h3&gt;

&lt;p&gt;自分のチームにデザイナーを加えるメリットは、ぱっと思いつくだけでもいくつもあります。プロトタイピングツールを用いたより早いユーザヒアリングのサイクル、コンテクストに沿ったデザイン、意思決定へのユーザ目線、広告クリエイティブの改善、などなど。&lt;/p&gt;

&lt;p&gt;エンジニアが意思決定に参加するようになった結果、より良いプロダクトが生み出せるようになりました。&lt;br /&gt;
デザイナーがチームに加わることでより良いシナジーが生まれることは明白です。&lt;br /&gt;
エンジニアがビジネスチームと一緒にプロダクトを作る過程に、初期からデザイナーに参加してもらいましょう。&lt;br /&gt;
それぞれの分野の専門家が集まり小さなチームとなり、コンテクストを共有し、頭で考え課題を解決していく。そんな世界が待っています。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
&lt;a href=&#34;http://www.turnyourideasintoreality.com/2016/02/kauru/&#34;&gt;REALITY - 不動産売買市場をディスラプトするHousmart、不動産を買いたい人が本当にハッピーになるサービス 「カウル」をローンチ。&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://kawlu.com/market&#34;&gt;【カウル】仲介手数料無料の中古マンション売買サービス&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;※Housmartは &lt;strong&gt;デザインの知識を武器に、ビジネス・エンジニアと共に不動産業界の課題を解決してくれるデザイナーを募集しています。&lt;/strong&gt;&lt;br /&gt;
ご興味ある方は tomoaki.takamatsu@housmart.com までご連絡ください。お話しましょう！&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>