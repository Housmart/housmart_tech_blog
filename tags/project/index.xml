<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Project on カウル Tech Blog</title>
    <link>http://techblog.housmart.co.jp/tags/project/</link>
    <description>Recent content in Project on カウル Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Powered by [Kawlu](//kawlu.com).</copyright>
    <lastBuildDate>Tue, 20 Mar 2018 20:03:55 +0900</lastBuildDate>
    
	<atom:link href="http://techblog.housmart.co.jp/tags/project/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>スタートアップの現場で役立つ開発要件のまとめ方</title>
      <link>http://techblog.housmart.co.jp/2018/03/20/minispec/</link>
      <pubDate>Tue, 20 Mar 2018 20:03:55 +0900</pubDate>
      
      <guid>http://techblog.housmart.co.jp/2018/03/20/minispec/</guid>
      <description>&lt;p&gt;こんにちは。ハウスマートの高松(&lt;a href=&#34;https://twitter.com/t2kmt&#34;&gt;@t2kmt&lt;/a&gt;)です。&lt;/p&gt;

&lt;p&gt;皆さんは開発要件をまとめるのにどんなフォーマットを使っていますか？&lt;/p&gt;

&lt;p&gt;開発要件をいい感じにまとめるのって大変ですよね。
ドキュメント整備せずに開発に着手し始めてしまうと手戻り抜け漏れが出てしまいますが、一方で要件定義書をガチガチなフォーマットにするとドキュメントの作成自体の工数が増えてしまいます。
スタートアップはスピードが命。ドキュメントを書きまくって開発が進まないなんて言語道断です。&lt;/p&gt;

&lt;p&gt;開発要件の整理はプロジェクトの成否に多大なインパクトを与えますが、ほとんどの現場では企画を考える人にフォーマットが委ねられていることが多いと思います。&lt;/p&gt;

&lt;p&gt;今回は皆さんが快適に開発要件をまとめられるように、ハウスマートで利用している mini spec というフォーマットをご紹介します。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>大きめプロジェクトにスクラムを適用する</title>
      <link>http://techblog.housmart.co.jp/2016/06/15/card-ui-prj/</link>
      <pubDate>Wed, 15 Jun 2016 22:48:09 +0900</pubDate>
      
      <guid>http://techblog.housmart.co.jp/2016/06/15/card-ui-prj/</guid>
      <description>&lt;p&gt;こんにちは！Housmartの宮永です。&lt;/p&gt;

&lt;p&gt;過去に弊社のスクラム開発について概要をご紹介(&lt;a href=&#34;http://techblog.housmart.co.jp/2016/03/14/dev_cycle/&#34;&gt;スタートアップのCTOになって2ヶ月で作った開発サイクル&lt;/a&gt;)させていただきました。
今回はより実践的な話を説明します。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>