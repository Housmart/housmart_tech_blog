<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on カウル Tech Blog</title>
    <link>http://techblog.housmart.co.jp/tags/development/index.xml</link>
    <description>Recent content in Development on カウル Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Powered by [Kawlu](//kawlu.com).</copyright>
    <atom:link href="http://techblog.housmart.co.jp/tags/development/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>ちょっとの工夫でスムーズに！iOSアプリ開発のコツ9つ(コーディング・デザイン編)</title>
      <link>http://techblog.housmart.co.jp/2016/09/07/ios-tips-for-developer/</link>
      <pubDate>Wed, 07 Sep 2016 17:54:20 +0900</pubDate>
      
      <guid>http://techblog.housmart.co.jp/2016/09/07/ios-tips-for-developer/</guid>
      <description>&lt;p&gt;ショッピングアプリでの経験や&lt;a href=&#34;https://developer.apple.com/ios/human-interface-guidelines/&#34;&gt;iOSガイドライン&lt;/a&gt;(または&lt;a href=&#34;https://material.google.com/&#34;&gt;マテリアルデザイン&lt;/a&gt;)から学んだiOS開発のプラクティスをまとめてみました。&lt;br /&gt;
弊社より8月30日にリリースした&lt;a href=&#34;https://itunes.apple.com/app/id1143903849&#34;&gt;カウルのアプリ&lt;/a&gt;開発でとった対応も併記しています。&lt;/p&gt;

&lt;p&gt;iOSアプリ開発で意識すべきポイントは、チームやコミュニティの中では共有されているものの、まとまった情報を得ることがなかなか難しいかと思います。&lt;br /&gt;
&lt;strong&gt;これから企業でiOSアプリを初めて開発するエンジニア&lt;/strong&gt; な方々の参考になれば幸いです。&lt;/p&gt;

&lt;p&gt;「サービス・システム設計」の観点から新規アプリ開発において意識すべきポイントはこちらの記事にまとめています。&lt;br /&gt;
&lt;a href=&#34;http://techblog.housmart.co.jp/2016/09/01/ios-development-tips/&#34;&gt;「iPhoneアプリを作り始める前に考えておきたい5つのこと」&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#coding&#34;&gt;コーディング&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#coding1&#34;&gt;1.Storyboardを積極的に利用する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#coding2&#34;&gt;2.SchemeとPreprocessor Macrosを使って環境を切り分ける&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#coding3&#34;&gt;3.UIWebViewは使わずにWKWebViewやSFSafariViewを使う&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#coding4&#34;&gt;4.Custom URL schemeやUniversal Links、WKScriptMessageHandlerでwebとネイティブを繋ぐ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#coding5&#34;&gt;5.こまめにプルリクエストをマージする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#coding6&#34;&gt;6.ベータ版を定期的に社内配信する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#design&#34;&gt;デザイン&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#design1&#34;&gt;1.滑らかにアニメーションさせる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#design2&#34;&gt;2.UI要素のレイアウトを揃える&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#design3&#34;&gt;3.web処理を意識させない&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;div id=&#34;coding&#34;/&gt;&lt;/p&gt;

&lt;h2 id=&#34;コーディング&#34;&gt;コーディング&lt;/h2&gt;

&lt;p&gt;&lt;div id=&#34;coding1&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;1-storyboardを積極的に利用する&#34;&gt;1.Storyboardを積極的に利用する&lt;/h3&gt;

&lt;p&gt;UI要素はコードだけで生成することもできますが、Storyboardを積極的に使って実装すると、実行時の画面の状態がプレビューできるので新しくプロジェクトに関わる人がいても理解がしやすくなります。&lt;/p&gt;

&lt;p&gt;一方でデメリットは、AutoLayoutとConstraintsの挙動を覚える必要があること、複数人で同じStoryboardを編集する際にGit上でコンフリクトすることが挙げられます。&lt;br /&gt;
Storyboardを分割しておくことでコンフリクトは極力減らせます。&lt;/p&gt;

&lt;p&gt;またStoryboardから変更できないようなUI要素については、&lt;code&gt;IBDesignable&lt;/code&gt;を使って拡張します。&lt;br /&gt;
例えばカウルでは&lt;code&gt;IBDesignable&lt;/code&gt;を使ってStoryboardからボタンの角丸を変更できるようにしつつ、各種ボタンに一定の丸みを持たせるようにしています。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;coding2&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-schemeとpreprocessor-macrosを使って環境を切り分ける&#34;&gt;2.SchemeとPreprocessor Macrosを使って環境を切り分ける&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Debug&lt;/code&gt;、&lt;code&gt;Release&lt;/code&gt;以外にも&lt;code&gt;Staging&lt;/code&gt;のようなスキームも定義して、プリプロセッサマクロで以下のような処理をビルド毎に切り分けます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;APIの接続先&lt;/li&gt;
&lt;li&gt;クラッシュトラッキングやアナリティクスのON/OFF&lt;/li&gt;
&lt;li&gt;データのキャッシュ時間&lt;/li&gt;
&lt;li&gt;・・などなど&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;本番(または開発中)のバージョンにだけ出したい機能・設定の切り分けに使いましょう。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;coding3&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;3-uiwebviewよりwkwebviewやsfsafariviewを使う&#34;&gt;3.UIWebViewよりWKWebViewやSFSafariViewを使う&lt;/h3&gt;

&lt;p&gt;UIWebViewよりWKWebViewの方が、描画が速く、クラッシュも少なく安定します。&lt;br /&gt;
SFSafariViewはカスタマイズできる部分が少なくなりますが、SafariアプリとCookie等が共有されるので自分のサービス外のURLを開く際などに使うとユーザにとって便利です。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;coding4&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;4-custom-url-schemeやuniversal-links-wkscriptmessagehandlerでwebとネイティブを繋ぐ&#34;&gt;4.Custom URL schemeやUniversal Links、WKScriptMessageHandlerでwebとネイティブを繋ぐ&lt;/h3&gt;

&lt;p&gt;3つを主に以下のような用途で使い分けて、webとネイティブを繋ぎます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;カスタムURLスキーム: Safari等からアプリへの遷移。&lt;code&gt;kawlu://&lt;/code&gt;のようなURLでアプリを起動してくれます。&lt;/li&gt;
&lt;li&gt;ユニバーサルリンク: Safari等からアプリへの遷移。&lt;code&gt;https://kawlu.com&lt;/code&gt;のようなURLでアプリを直接起動してくれます。&lt;/li&gt;
&lt;li&gt;WKScriptMessageHandler: アプリ内のWebViewからアプリへの情報渡し。JavaScriptからWebView内に処理を渡してくれます。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;カウルではユニバーサルリンク中心に利用する予定でしたが、このブログを書いている時点では &lt;strong&gt;Safari以外のアプリでリダイレクトリンクを踏んだ際は作動しない&lt;/strong&gt; という挙動があったためカスタムURLスキームも利用しています。&lt;br /&gt;
以下が具体的にユニバーサルリンクが作動しない事例です。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;トラッキングのためSendgrid経由でメールを送る&lt;/li&gt;
&lt;li&gt;ユーザがGmailアプリでメール開いてリンクをクリックする&lt;/li&gt;
&lt;li&gt;リンクはSendgridドメインを経由するリダイレクトになっており、ユニバーサルリンクが作動しない&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;div id=&#34;coding5&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;5-こまめにプルリクエストをマージする&#34;&gt;5.こまめにプルリクエストをマージする&lt;/h3&gt;

&lt;p&gt;複数人で開発を行っているとpbxprojファイルやStoryboardが、コンフリクトして解消に時間を取られるので、プルリクエストを長い間放置しないようしてコンフリクトを減らします。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;coding6&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;6-ベータ版を定期的に社内配信する&#34;&gt;6.ベータ版を定期的に社内配信する&lt;/h3&gt;

&lt;p&gt;動作確認をしたり、認識を合わせる上で一番良いのは実際にアプリをデバイスにインストールして使ってもらうことです。&lt;br /&gt;
インストールしたくなる度にMacにiPhoneをUSB接続するのでは効率が悪いため、&lt;a href=&#34;http://try.crashlytics.com/beta/&#34;&gt;Crashlytics Beta&lt;/a&gt;等のツールからいつでも関係者がインストールできるようにします。&lt;/p&gt;

&lt;p&gt;カウルの開発では帰宅時に最新版のビルドを配信するようにしていました。&lt;br /&gt;
今後は&lt;a href=&#34;https://fastlane.tools/&#34;&gt;fastlane&lt;/a&gt;などを利用して、新しいコミットがある度に自動配信できるようにしようと検討中です。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;design&#34;/&gt;&lt;/p&gt;

&lt;h2 id=&#34;デザイン&#34;&gt;デザイン&lt;/h2&gt;

&lt;p&gt;基本的には、標準的なiOSのUI要素を使いつつ、アプリ内での一貫性を重視するようにします。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;design1&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;1-滑らかにアニメーションさせる&#34;&gt;1.滑らかにアニメーションさせる&lt;/h3&gt;

&lt;p&gt;要素が現れたり消えたり、移動する際に滑らかにアニメーションするようにします。&lt;br /&gt;
また、時間がかかる処理をしている間はユーザに「読み込みしている」ということを分かるようにします。&lt;/p&gt;

&lt;p&gt;見た目のカッコ良さだけでなく、直前のタップやスクロールという動作から次のアクションへの繋がりが見えるようアニメーションを利用することを心がけます。&lt;/p&gt;

&lt;p&gt;画面描画が重たくなる場合、ユーザに見えていない部分の要素の描画がされてることもあるので&lt;a href=&#34;https://developer.apple.com/library/ios/documentation/ToolsLanguages/Conceptual/Xcode_Overview/ExaminingtheViewHierarchy.html&#34;&gt;描画中のビューを見てデバッグする&lt;/a&gt;のが有効です。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;design2&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-ui要素のレイアウトを揃える&#34;&gt;2.UI要素のレイアウトを揃える&lt;/h3&gt;

&lt;p&gt;UI要素のサイズには、標準的なiOSのUI要素がもともと持っているサイズを使うか、サービス内で定義したサイズを使うことで、iOSやサービスの一部として馴染むようにします。&lt;/p&gt;

&lt;p&gt;例えば、ボタン等のタッチ領域は&lt;a href=&#34;https://developer.apple.com/ios/human-interface-guidelines/visual-design/layout/&#34;&gt;44pt以上&lt;/a&gt;にするようにしたり、サービス内で独自に定義するサイズは&lt;a href=&#34;https://material.google.com/layout/metrics-keylines.html&#34;&gt;8の倍数&lt;/a&gt;を使います。&lt;/p&gt;

&lt;p&gt;他にも角丸を統一したり、色についても&lt;a href=&#34;http://qiita.com/furuyan/items/1144b99e4c01c6a6ae27&#34;&gt;サービス用のパレットを追加&lt;/a&gt;したり、定数化して統一化します。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;design3&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;3-web処理を意識させない&#34;&gt;3.web処理を意識させない&lt;/h3&gt;

&lt;p&gt;アプリ内で同一サービスのwebページを開く際、それがwebビューであるかどうかユーザが認識する必要はありません。&lt;/p&gt;

&lt;p&gt;具体的にカウルでは、「戻る」ボタンをタップした際や、画面左からのスワイプをした際に、一貫して「直前まで見ていたものに戻る」ために以下のような処理をしています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;webViewであれば、1ページ前に戻る&lt;/li&gt;
&lt;li&gt;webViewでなければ、1つ前のviewに戻る&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;ここに書いてあることはカウルの開発で実施していることの一部です。是非みなさんの意見や、やり方も教えていただけると幸いです！&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://kawlu.com/market&#34;&gt;カウル&lt;/a&gt;のアプリは&lt;a href=&#34;https://itunes.apple.com/app/id1143903849&#34;&gt;こちら&lt;/a&gt;です。基本料無料で使えますので、是非ご利用ください！&lt;br /&gt;
&lt;a href=&#34;https://itunes.apple.com/app/id1143903849&#34;&gt;https://itunes.apple.com/app/id1143903849&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by まっくす&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【2016年夏】iPhoneアプリを作り始める前に考えておきたい5つのこと</title>
      <link>http://techblog.housmart.co.jp/2016/09/01/ios-development-tips/</link>
      <pubDate>Thu, 01 Sep 2016 15:54:20 +0900</pubDate>
      
      <guid>http://techblog.housmart.co.jp/2016/09/01/ios-development-tips/</guid>
      <description>&lt;p&gt;「iPhoneアプリ作る前に考慮しておくべきことってなんだろう？」&lt;br /&gt;
こんな疑問を開発前に持つ方向けに、「サービス・システム設計」の観点から新規アプリ開発において意識すべきポイントをまとめました。&lt;/p&gt;

&lt;p&gt;また、弊社より8月30日にリリースした&lt;a href=&#34;https://itunes.apple.com/app/id1143903849&#34;&gt;カウルのアプリ&lt;/a&gt;開発でとった対応も併記しています。&lt;br /&gt;
過去に携わっていたショッピングアプリでの経験や、先輩アプリエンジニアの方々に教えていただいたことをベースとしています。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;企業でiOSアプリを初めて開発するエンジニア&lt;/strong&gt; や &lt;strong&gt;作る機能・スケジュールを決めるプロダクトオーナー&lt;/strong&gt; といった方々の判断の材料になれば幸いです。&lt;/p&gt;

&lt;p&gt;エンジニア視点でのスムーズなiOSアプリ開発のためのポイントはこちらにまとめています。&lt;br /&gt;
&lt;a href=&#34;http://techblog.housmart.co.jp/2016/09/06/ios-tips-for-developer/&#34;&gt;ちょっとの工夫でスムーズになるiOSアプリ開発のコツ9つ(コーディング・デザイン編)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#service&#34;&gt;サービス・システム設計で考えておきたい5つのこと&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#service2&#34;&gt;1.ユーザにアプリアップデートを促す仕組み&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#service3&#34;&gt;2.webからアプリへのインストールの導線&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#service1&#34;&gt;3.対応デバイス選定&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#service4&#34;&gt;4.Appleの審査でリジェクトされることも想定した締切&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#other1&#34;&gt;5.クラッシュのトラッキング等に使うプラットフォームの選定&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#other&#34;&gt;カウルアプリの中の話&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#other2&#34;&gt;今回のリリースに含めなかった対応&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#other3&#34;&gt;開発にかかったコスト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;div id=&#34;service&#34;/&gt;&lt;/p&gt;

&lt;h2 id=&#34;サービス-システム設計で意識しておきたい5つのこと&#34;&gt;サービス・システム設計で意識しておきたい5つのこと&lt;/h2&gt;

&lt;p&gt;web開発と異なる部分として、プッシュ通知などアプリならではの考慮しておくと良いことがあります。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;service2&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;1-ユーザにアプリアップデートを促す仕組み&#34;&gt;1.ユーザにアプリアップデートを促す仕組み&lt;/h3&gt;

&lt;p&gt;APIのバージョンを上げる際、バージョンアップ前のAPIに合わせて実装されていたアプリが動かなくなる可能性があります。&lt;br /&gt;
旧バージョンのAPIを使うアプリが残っていると、複数バージョンのAPIを運用していく必要がありますが、運用コストやセキュリティ等の理由で旧バージョンのAPIを閉じる必要も出てくるでしょう。&lt;br /&gt;
ですので、特定バージョンのアプリにアップデートを促す仕組みを導入できていると将来的な運用コストを抑えることができます。&lt;/p&gt;

&lt;p&gt;カウルでは&lt;a href=&#34;https://firebase.google.com/docs/remote-config/&#34;&gt;Firebase Remote Config&lt;/a&gt;を使用して、通知が必要なバージョンのアプリを管理するようにしています。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;service3&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-webからアプリへのインストールの導線&#34;&gt;2.webからアプリへのインストールの導線&lt;/h3&gt;

&lt;p&gt;アプリをリリースした後の、webからのアプリをインストールさせるための導線についても考えておきます。&lt;/p&gt;

&lt;p&gt;カウルではランディングページへアクセスした際に&lt;a href=&#34;https://developer.apple.com/library/ios/documentation/AppleApplications/Reference/SafariWebContent/PromotingAppswithAppBanners/PromotingAppswithAppBanners.html&#34;&gt;Smart App Banners&lt;/a&gt;を出すようにしつつ、web版への登録ステップも残すことにしました。&lt;br /&gt;
また、未対応のiOSバージョンの端末にはSmart App Bannersのメタタグを出さないようにしています。&lt;br /&gt;
ユーザの使用状況に応じて、インストールの導線を追加していくことも検討しています。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;service1&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;3-対応デバイス選定&#34;&gt;3.対応デバイス選定&lt;/h3&gt;

&lt;p&gt;対応デバイスとOSのバージョンを決めます。&lt;br /&gt;
カウルでは開発コストを抑えるため以下に絞りました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;iPhoneのみ対応(ローテーションの対応は無し)&lt;/li&gt;
&lt;li&gt;iOS9以降対応&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最新のiOS2バージョンをサポートすることが推奨です。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;service4&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;4-appleの審査でリジェクトされることも想定した締切&#34;&gt;4.Appleの審査でリジェクトされることも想定した締切&lt;/h3&gt;

&lt;p&gt;初回の審査ではリジェクトされる可能性が十分にあるので、余裕をもって審査に出します。&lt;/p&gt;

&lt;p&gt;これまで &lt;strong&gt;1週間程度かかっていたレビューが短縮されて、現在は1日程度になっている&lt;/strong&gt; ようです。&lt;/p&gt;

&lt;p&gt;カウルではメッセージのやりとり・指摘箇所の修正時間も見込んで2週間程のバッファを用意しました。&lt;br /&gt;
実際、カウルアプリの審査においても決済周りの説明や確認のやりとりに時間を使いました。&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;other1&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;5-クラッシュのトラッキング等に使うプラットフォームの選定&#34;&gt;5.クラッシュのトラッキング等に使うプラットフォームの選定&lt;/h3&gt;

&lt;p&gt;リリース後のクラッシュの検知や、プッシュ通知を送るためのプラットフォームを選びます。&lt;br /&gt;
特にクラッシュ検知ツールはお金もかからず、実装に時間もかからないので何かしらいれておきましょう。&lt;/p&gt;

&lt;p&gt;カウルの開発では以下のツール群を導入して、クラッシュ検知やプッシュ通知を実装しています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://get.fabric.io/&#34;&gt;Fabric&lt;/a&gt;関連のツール&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://fabric.io/kits/ios/answers&#34;&gt;Answers&lt;/a&gt;&lt;br /&gt;
アプリ起動状態のトラッキングをするツール&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://try.crashlytics.com/beta/&#34;&gt;Beta&lt;/a&gt;&lt;br /&gt;
開発途中のアプリを関係者に配信してテストするためのツール&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://fabric.io/kits/ios/crashlytics&#34;&gt;Crashlytics&lt;/a&gt;&lt;br /&gt;
アプリのクラッシュを検知するツール&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://firebase.google.com/&#34;&gt;Firebase&lt;/a&gt;関連のツール&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/analytics/&#34;&gt;Analytics&lt;/a&gt;&lt;br /&gt;
アプリ起動状態のトラッキングをするツール&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/notifications/&#34;&gt;Notifications&lt;/a&gt;&lt;br /&gt;
プッシュ通知を送るためのツール&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/remote-config/&#34;&gt;Remote Config&lt;/a&gt;&lt;br /&gt;
設定をリモートから配信するためのツール(A/Bテスト等に使える)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;div id=&#34;other&#34;/&gt;&lt;/p&gt;

&lt;h2 id=&#34;カウルアプリの中の話&#34;&gt;カウルアプリの中の話&lt;/h2&gt;

&lt;p&gt;&lt;div id=&#34;other2&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;今回のリリースに含めなかった対応&#34;&gt;今回のリリースに含めなかった対応&lt;/h3&gt;

&lt;p&gt;我々は以下のタスクを次のリリースに見送りましたが、スケジュール次第では可能な限り先に対応しておけると素敵です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;アナリティクスや既存のログ分析基盤との統合(&lt;a href=&#34;http://techblog.housmart.co.jp/2016/04/17/log-platform-for-startup/&#34;&gt;カウルのログ分析基盤について&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;自動テストの拡充&lt;/li&gt;
&lt;li&gt;CI・自動デプロイの環境拡充&lt;/li&gt;
&lt;li&gt;ASO(App Store Optimization)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;div id=&#34;other3&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;開発にかかったコスト&#34;&gt;開発にかかったコスト&lt;/h3&gt;

&lt;p&gt;JIRAの記録(&lt;a href=&#34;http://techblog.housmart.co.jp/2016/08/24/startup-dev/&#34;&gt;カウルの作業時間記録について&lt;/a&gt;)によると、1.5人月(240時間)ほどの作業時間を使いました。作業内容としては以下の様なタスクを含みます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;アプリ実装&lt;/li&gt;
&lt;li&gt;API修正(プッシュ通知の組み込みなど)&lt;/li&gt;
&lt;li&gt;モバイルwebのUI修正&lt;/li&gt;
&lt;li&gt;ミーティングやアップル審査の調整&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;ここに書いてあることはカウルの開発で実施していることの一部です。是非みなさんの意見や、やり方も教えていただけると幸いです！&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://kawlu.com/market&#34;&gt;カウル&lt;/a&gt;のアプリは&lt;a href=&#34;https://itunes.apple.com/app/id1143903849&#34;&gt;こちら&lt;/a&gt;です。基本料無料で使えますので、是非ご利用ください！&lt;br /&gt;
&lt;a href=&#34;https://itunes.apple.com/app/id1143903849&#34;&gt;https://itunes.apple.com/app/id1143903849&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by まっくす&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>スタートアップエンジニアって何に時間を使っているの？</title>
      <link>http://techblog.housmart.co.jp/2016/08/24/startup-dev/</link>
      <pubDate>Wed, 24 Aug 2016 21:25:46 +0900</pubDate>
      
      <guid>http://techblog.housmart.co.jp/2016/08/24/startup-dev/</guid>
      <description>&lt;p&gt;こんにちは！&lt;br /&gt;
Housmartの宮永です。&lt;/p&gt;

&lt;p&gt;スタートアップのエンジニアはリソースの都合もあるので
「何でもやる」というのが一般的認識かと思います。&lt;br /&gt;
弊社エンジニアもその一般的認識に違わず、何でもやる集団です。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#39;https://lh3.googleusercontent.com/cI7onjqojgOuX_hNREK4r7DiDNdDUeUWz4WXfO1ZkP4JD9y7sVrBCkFJuzGGnil-Z8mV90d3RvMHJGAHgRAR0mnOSQRRLf7GCRfNQ6AIAQHh8m4FWRfGnslGAsO71UEgRaDd5azasHFdCi7Auv4x-hQER9RLRR_WJXxK9cHy_DNGuLfh3e50iCnmTtdKQo2tEkSDsyFbs098p3TQpXSsDfcOO_4itNG-NWRVmxR4raGlBs-9TnTqzo_g0VahyZk5W_t2_VFcd5ArSaMAbyMSHeuHSR7cq9T7M2PGgcGfeKKaWy4LevlHtvBnJux_LzLkcp4bLaou-9t9aqmLaMOBYgEEx-J3_O3VOWukaUXHmvuYvXo3tT6vScIDevxzq2FF1aBXkrleOTf-vtjRuSpZoW0x_zZBMw1ArFn2pjjB3RY0psquNnoHWM5XwLdL0XTcv3WQwVzPIMBlgQNBzRyt37JQlS5XbWxrx9WxctOhVFa2sSe4AQovJmFR_YXodvTLSUtM1uw8eWuW5clcsqptFhVqE-XBHF0-AluN401UPybcC0hGoqZf-9IGfnAFFzpji61ePv7Mi0H1kdsag9IG246jq0fNoO8=w800-h912-no&#39; alt=&#39;何でもやるエンジニアの3人です。左から松江、宮永、高松&#39;&gt;&lt;/p&gt;

&lt;p&gt;でも「何でもやるんです。」では曖昧すぎて、どういう仕事をしているか全然イメージわきませんよね。&lt;/p&gt;

&lt;p&gt;ということで、&lt;span style=&#39;color:red&#39;&gt;実作業を全て記録している&lt;/span&gt;という弊社の特徴を活かして
今回は&lt;span style=&#39;color:red&#39;&gt;実作業時間&lt;/span&gt;をベースに弊社エンジニアがどんな業務をどういう割合で行っているのか紹介します。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;背景-組織の話&#34;&gt;＜背景＞組織の話&lt;/h2&gt;

&lt;p&gt;弊社エンジニアは3人。&lt;br /&gt;
メインプロダクトは中古マンション売買サービスの&lt;a href=&#34;https://kawlu.com&#34;&gt;カウル&lt;/a&gt;で、皆で大事に大事に育てています。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#39;https://lh3.googleusercontent.com/ZsJUQC8OIl5SdHBfqsVCo5lUzThyq309hg2-JW4QrOJBd0c6nNNo6lQb_vFxZJm3e5sFmlKnwvc6dg6Xq7EeZ0ckukTOlu9ZftuL0jK4nyoNlRY5Qi6VB1aEiiE95o_0MYxdT46aSkofHv3Zyuh24LPfP4ehNdFiQ93rIUAisDslti11qOtecqOKdwyHHraMXERJ-cqKhc7PVyPUDx7KIlS0QemwoKEMU5kC_mns0Y9snp5wIEL56rhQ6z-1XBLOd4wjPnMvsp5A3IsF_4DAmlCuKW0lDyxNX4gTmXVTKBj2gj-oZU3X8Xl_kIhLnDFSXpk69M7q6uc1Xu6F6V7Qj_QLu2F1FuwIv7XQgMxJpIpx55pm0eXRNfyxkQnX2rnmVYeGM_82mKmjPtVuxvjzGbNQV1-lnsRAYUBium_uWQ90JeKPX9IGZk8m9uCeODsWpqyDTNoJliz_wv6P_wBUxu5peyyiQjUhUtMSUwHWZKGhs-FV7MNgARrot0v5Y0SZ2GKFa_vAgB8-N1QAxRqo6igXMRuMK31HQQqm_WwYRnKMVB5Zy935AjZzVipPLZiQd8VZRQdoXF5hRcj9hMwaiEf48wQDYTYdYPh-9NLVZ5fInAkY=w650-h912-no&#39; alt=&#39;カウル&#39;&gt;&lt;/p&gt;

&lt;p&gt;エンジニア3人はプロジェクトのプランニングからリリースまで幅広く業務を行います。&lt;br /&gt;
（これがいわゆる「何でもやる」）&lt;/p&gt;

&lt;h4 id=&#34;主なタスク&#34;&gt;主なタスク&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;プロジェクトプランニング&lt;/li&gt;
&lt;li&gt;プロジェクト管理&lt;/li&gt;
&lt;li&gt;設計&lt;/li&gt;
&lt;li&gt;開発&lt;/li&gt;
&lt;li&gt;テスト&lt;/li&gt;
&lt;li&gt;運用（トラブル対応、データ抽出など）&lt;/li&gt;
&lt;li&gt;KPI管理&lt;/li&gt;
&lt;li&gt;MTG&lt;/li&gt;
&lt;li&gt;自由研究&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これだけ色々なことをやっているので、&lt;br /&gt;
何にどれだけ使っているのかは&lt;span style=&#39;color:red&#39;&gt;記録でもしないかぎり&lt;/span&gt;把握しきれません。&lt;/p&gt;

&lt;h2 id=&#34;作業の記録&#34;&gt;作業の記録&lt;/h2&gt;

&lt;p&gt;前述のとおり、弊社エンジニアは入社以来、全作業に対して実作業時間を記録しています。&lt;br /&gt;
例えば「weekly MTGの参加」や「xxのbug fix」もそれぞれチケット化して記録します。&lt;br /&gt;
※&lt;a href=&#34;https://ja.atlassian.com/software/jira&#34;&gt;JIRA&lt;/a&gt;で全て管理しています。&lt;br /&gt;
※ご飯、筋トレ、昼寝は記録対象外。&lt;/p&gt;

&lt;h2 id=&#34;エンジニアの作業実績-2016-01-2016-08&#34;&gt;エンジニアの作業実績(2016 / 01 - 2016 / 08)&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/cd4pAvEbM3NfTrcX1DELrhfF9oXpTP2z_Fob_Kovbw_yr4JUTAIfKmAzpcvT9l7GCVTgrYR66rhZxbe22JINTgdKsdkyf6PbJMroX4FN5y-4vJkgJDBTlnailOLBN7_k4Wp09qVW54DSLZ9mCj0HQMIGQAjwKLflaBNbkwmBOR21KSeLo0QLgFedHRosmc7NQzenmDRCmIYAO7-31Igor64cmaX0fsEwXGikzdjVu91jf-21IZrAcw4XjGDIqfeoG99WrsZQVcfjxvyEQzJ2iPPafYI1rc5D7APjwpJpoKaLmvUn4Ce9TGgpaAzxA3FUsuyli2NCXEcbcVYkApgl8SsCGvMr7I2LsNjk4_VYwIWy7apT7X-QmMf5OO0AoPkIdZ_LFBG0zk77jRhH-rCOMCtFg54fMPUA-r_BPMwn2sAP55fE_-M-i5MC3kaTv7-E8K4vA7O3d3-_RN3Kt46xDqCn4uyGM_dd2gSRPC3nElCXaIheA_ZhUQ_a9G1ue38sOWFbMpDR3qrwaRAaSfnBKk1dbFtDL9L9k7amHNHgbaCbEd6K8Klbna9I1M76FRIgop0hoUW9QB4NixszMVCz8QzGfPSa32E=w650-h669-no&#34;&gt;
&lt;div style=&#34;font-size:12px;margin-top: -25px&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;development : 開発、テスト&lt;/li&gt;
&lt;li&gt;bug : 本番で発生したバグの修正作業&lt;/li&gt;
&lt;li&gt;operation : 運用（トラブル対応、データ抽出など）&lt;/li&gt;
&lt;li&gt;dev-improvement : 開発環境改善に関する作業&lt;/li&gt;
&lt;li&gt;planning : MTG、プランニング、要件定義、設計、外部との調整作業&lt;/li&gt;
&lt;li&gt;lab : 自由研究 ※毎週水曜日は1日自由研究時間に充てている&lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;
&lt;br&gt;
上図は入社した2016/01より約8ヶ月間記録してきた全作業実績です。&lt;br /&gt;
development(開発)やplanning(MTG、企画)にかける時間は少しずつ上昇していることがわかります。&lt;br /&gt;
これは案件規模が少しずつ大きくなり企画時間が増えたり、システム自体が少しずつ複雑化していることで開発の時間が増えたりしていることが背景にあります。&lt;/p&gt;

&lt;p&gt;operation(運用), bug(本番で発生したバグの修正作業)は毎月全体の10%程度の工数です。&lt;br /&gt;
スピード感のある開発を行っているので、多少のバグはしょうがない面もありますが、&lt;br /&gt;
バグの対応が増えてしまえば他の作業にはねてしまうので、スピードを保ったまま1-5%くらいまでに落とせればと思ってます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/GiCPVq13nhO7yk31s9STFNxBlX19KXlidRnVD2hxBzeb-7AQZMrQa2pzy0cW6oSSm_51e-klLHddSoRNQES8KfvCMNZjPfuqg7SqMlBtSEQen--yKE-4-Al0pMDZJky8yo0VRU2OzZnIYqFNiLWxAC_T2sPnd9m7HxR_ZSVt7KNfaq8cgTHG2hlONZTBgdCH3cgTApXiOUOUAgHzlR_3OQpqDD_c1C4d5Ddf0C9TKTiY7PjQa9gVnYWUyOlFNTLtdwBCW-KlCCmCKjTjKr5IiC6n_CjlF3YavLRaZIkQEVdLUJJd1PRB-dt8S70D2CbHeN1Ev6C1rMpDfze51_UPtpaTqFcPIEEUTNtY-Fh5NVy5jJKyxiu6ogZJicmLJLqZjCbpAHpkoIs4agWihpFe_Z11Awz9jjZAcwY3x7KKsw-xybDwDnmexdyVy1oi6DUGlSBZdc2HJ9_LETi0WC5hknW6J6aWEGrtx4CnVRM5qDRYQTVU0W50THJwZ2QH9VciocJ9D0-xpTLw_9lVUJll3K7U7MA4fvAuv_V13tBhVlvPc3sg8m5UF-kce0OGKbic_qTGgI21W9FOr-v8qndavgk_Dn4upyU=w650-h658-no&#34;&gt;
&lt;div style=&#34;font-size:12px;margin-top: -25px&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;development : 開発、テスト&lt;/li&gt;
&lt;li&gt;bug : 本番で発生したバグの修正作業&lt;/li&gt;
&lt;li&gt;operation : 運用（トラブル対応、データ抽出など）&lt;/li&gt;
&lt;li&gt;dev-improvement : 開発環境改善に関する作業&lt;/li&gt;
&lt;li&gt;planning : MTG、プランニング、要件定義、設計、外部との調整作業&lt;/li&gt;
&lt;li&gt;lab : 自由研究 ※毎週水曜日は1日自由研究時間に充てている&lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;上図は作業時間の各種作業の割合を示します。&lt;br /&gt;
ここ数ヶ月はlab(自由研究)やdev-improvement(開発環境改善)の時間を&lt;br /&gt;
開発にあてているのが現状です。&lt;/p&gt;

&lt;p&gt;lab（環境改善、自由研究）は弊社にとって投資にあたり&lt;br /&gt;
会社やプロダクトの成長に欠かせない大事な要素です。&lt;br /&gt;
時期を見てかける時間も増やしていきたいと思います。&lt;/p&gt;

&lt;h2 id=&#34;結論-housmartエンジニアの業務とは&#34;&gt;結論（Housmartエンジニアの業務とは？）&lt;/h2&gt;

&lt;p&gt;ということで作業時間から見たHousmartエンジニアの働き方は下図のようになります。&lt;br /&gt;
&lt;img src=&#39;https://lh3.googleusercontent.com/FzBf0xEm9MHzaCuVlu8d9ALcMcrLnyZ3ktJPI3FFNS48iV1pCH6GcQ691ztwQZ_OyymkgzKxQn3dePYTmWf1ClG2Lnas1CehUdrjPEL9EaShXkDE19qBSw2B90fKXe4NpyBgXeiQreaauPfFoUT-rZArCmw7UPF3kMg0EaIADoO9VbEwBSQdvXHVyHjg9-6mIrZ0FqA1ENysOsY89c3N7XA6vIeOeI3TWW3mku6lDTJzxHvX-ceNvpd7ZA_JHmrSxA4bBDKaMpdY4JQWVs56TQlh62oOewKJ1YlYk2HUV_qJ8HLvSUxx4wVvARyGF7qFthsNrzhykNowNFz4r7kkL-PJdXHabZFnT_T7LkVB4QeBkkx8WJ10TSIEV2b7SIPbzO1UGIGLa4Q7Uhz3YibwX9fhss11ryOo8O3yAREN5baklINwq9ET-zGPhcB6lj30oHej3EMs7jb_w9kZHETz0P_ZFEE3AqhQH413e09vboqJpSuROc2oMaCAJ9IIg0bkLYhSQR3B_FkCOeGan9a0HfnFaVU1qYXAXJSBNZWZ8uKn2onAZ76vCptynJ90C63_YXNkpDZu5LjElaWKTU2C8_AJ5dm6eXo=w592-h310-no&#39;&gt;&lt;/p&gt;

&lt;p&gt;このような働き方や&lt;span style=&#39;color:red&#39;&gt;ReTech(不動産テック)&lt;/span&gt;に興味のあるエンジニアの方は
ぜひご連絡ください！&lt;br /&gt;
お待ちしております。&lt;/p&gt;

&lt;p&gt;akihisa.miyanaga@housmart.com&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>なぜdevelopブランチは必要なの？</title>
      <link>http://techblog.housmart.co.jp/2016/06/22/git-workflow/</link>
      <pubDate>Wed, 22 Jun 2016 21:25:46 +0900</pubDate>
      
      <guid>http://techblog.housmart.co.jp/2016/06/22/git-workflow/</guid>
      <description>&lt;p&gt;「Gitのブランチ構成どうしましょうか？」&lt;br /&gt;
「とりあえずdevelop切ってやっていきますね。」&lt;/p&gt;

&lt;p&gt;そのdevelopブランチ本当に必要でしょうか。&lt;br /&gt;
developブランチだけ使われていて、masterが全く使われていなかったりしないでしょうか。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;よく聞かれるブランチ戦略としては&lt;a href=&#34;http://nvie.com/posts/a-successful-git-branching-model/&#34;&gt;git-flow&lt;/a&gt;や&lt;a href=&#34;http://scottchacon.com/2011/08/31/github-flow.html&#34;&gt;GitHub Flow&lt;/a&gt;、、&lt;a href=&#34;http://docs.gitlab.com/ee/workflow/gitlab_flow.html&#34;&gt;GitLab Flow&lt;/a&gt;等があります。&lt;br /&gt;
git-flowにおいてはdevelopやhotfix、releaseといったブランチがありますが、GitHub Flowにはmasterブランチと機能開発ブランチの2つしかありません。GitLab Flowはmasterを中心に開発を行い、productionブランチを安定させていくスタイルです。&lt;/p&gt;

&lt;p&gt;実際に新しいプロジェクトを始めるとしたら、どの構成が良いのでしょうか。&lt;br /&gt;
今回はカウルを開発するにあたり採用したブランチの構成とその背景について紹介します。&lt;/p&gt;

&lt;h2 id=&#34;望んでいたこと&#34;&gt;望んでいたこと&lt;/h2&gt;

&lt;p&gt;前提としてカウルのプロジェクトを始めるにあたって望んだことは以下の3つです。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;ロールバックによるバージョン戻しが容易であること&lt;/li&gt;
&lt;li&gt;問題が起きた場合にバージョン間の問題の切り分けが容易であること&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;時間のかかる機能開発中にもバグ修正コミットを差し込めること&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;1と2については、リリース時にタグをつけておくことで容易に&lt;code&gt;git reset&lt;/code&gt;や&lt;code&gt;git diff&lt;/code&gt;が出来ます。&lt;/p&gt;

&lt;p&gt;3つ目の要件については、developブランチがあるとよいと考えました。&lt;/p&gt;

&lt;h2 id=&#34;実際のブランチ構成&#34;&gt;実際のブランチ構成&lt;/h2&gt;

&lt;p&gt;上記を踏まえると、タグづけとdevelopブランチはあると良さそうです。&lt;br /&gt;
よってカウルでは以下の構成をとりました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;master&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;テストで確認されたdevelopだけが&lt;code&gt;git merge --no-ff&lt;/code&gt;コマンドでマージされる&lt;/li&gt;
&lt;li&gt;急ぎのバグ修正(hotfix)は、確認された後developブランチを経由しない&lt;/li&gt;
&lt;li&gt;リリース時に自動で&amp;rdquo;日付_インデックス&amp;rdquo;tagを付ける(たとえば&amp;rdquo;20160622_01&amp;rdquo;)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;develop&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;masterから派生したブランチ、featureブランチの派生元&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;(feature/)チケット番号&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;developから派生した機能開発全般のブランチ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;(hotifix/)チケット番号&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;masterから派生したバグ修正用のブランチ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;現状、featureやhotixといった修飾は特につけておらず、概念だけメンバー間で共有しています。&lt;/p&gt;

&lt;h2 id=&#34;実際の開発フロー&#34;&gt;実際の開発フロー&lt;/h2&gt;

&lt;p&gt;考えた構成を基に以下のような流れで開発を行っています。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;最新のdevelopからチケット番号でブランチを切る&lt;/li&gt;
&lt;li&gt;チケット番号ブランチで開発した機能をコミット、プッシュする&lt;/li&gt;
&lt;li&gt;終わったらdevelopにプルリクエストを送り、レビューの後マージされる&lt;/li&gt;
&lt;li&gt;ステージング環境に最新のdevelopを出して確認する&lt;/li&gt;
&lt;li&gt;問題なければdevelopをmasterにマージしタグ付け、 本番に最新のタグをデプロイする&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;カウルの構成でもdevelopは必要なのか&#34;&gt;カウルの構成でもdevelopは必要なのか&lt;/h2&gt;

&lt;p&gt;1ヶ月程度かかるような&lt;a href=&#34;http://techblog.housmart.co.jp/2016/06/15/card-ui-prj/&#34;&gt;大きめプロジェクト&lt;/a&gt;があり、
他の機能開発も行っているので今のところはあるとよいと考えています。&lt;/p&gt;

&lt;p&gt;また一方で以下の変化を踏まえて、よりgithub-flowに近い構成でも問題ない状況になりつつあると考えています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;コードはすぐにリリースできる状態になっており、日に何度かリリースされることもあり、masterとdevelopの間で違いが少なくなっている&lt;/li&gt;
&lt;li&gt;開発初期に比べてコードのベースはできていて、小中規模機能や他の箇所への影響が少ない開発が多くなっている&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;いつdevelopブランチは必要なの&#34;&gt;いつdevelopブランチは必要なの？&lt;/h2&gt;

&lt;p&gt;数日~1週間でブランチがマージされていく状況であればdevelopはなくても問題ないでしょう。シンプルな構成の方がGitの操作も少なくて済みます。&lt;br /&gt;
数週間を越えてブランチがマージされないような状況を開発をしているときはdevelopやreleaseがあると安定したプロダクトを出荷できると考えます。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;今回はカウルのGitブランチ管理について紹介致しました。&lt;br /&gt;
ユーザに素早く安定した価値を届けらる、開発者にも優しい運用にするべく今後も取り組んでいきます！&lt;/p&gt;

&lt;p&gt;by まっくす&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>大きめプロジェクトにスクラムを適用する</title>
      <link>http://techblog.housmart.co.jp/2016/06/15/card-ui-prj/</link>
      <pubDate>Wed, 15 Jun 2016 22:48:09 +0900</pubDate>
      
      <guid>http://techblog.housmart.co.jp/2016/06/15/card-ui-prj/</guid>
      <description>&lt;p&gt;こんにちは！Housmartの宮永です。&lt;/p&gt;

&lt;p&gt;過去に弊社のスクラム開発について概要をご紹介(&lt;a href=&#34;http://techblog.housmart.co.jp/2016/03/14/dev_cycle/&#34;&gt;スタートアップのCTOになって2ヶ月で作った開発サイクル&lt;/a&gt;)させていただきました。
今回はより実践的な話を説明します。&lt;/p&gt;

&lt;p&gt;
以前紹介しました通り、カウル開発チームは1週間／スプリントと短めに取ってますが、&lt;br /&gt;
1週間じゃ収まらないようなサイズのプロジェクトの時はどう管理するの？って話になりますよね。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/teOBN1hx88WnjkLmj5IAQQdUWSp8w-A_8pyaqW3TG0_1yCLJoQuIX3BqfeXAMAJA-m9fIQJHZ4SRT1DH-K64Zglma9TvzHSxjda0dKX9RNpn6HtvY8PnccXVzZkt7UZqgYkFyy4UYj0WD-vyMZ08WC68JPUf-HlKXM8lvSHzk_6BAjwPDmlwX5kuDBBwT82uq3fTfEZCZY6gIEmT9RCsphAcVHNJCfbVYE3xXENZN0svE5FhouUc97KK5dkNMUAGOJdCjhnK92ROUoKg3ijB8J-hDB6KgsIV9iWz5nWgZNL6PEeXORn3mFp2uR8vKoKM3pr0BsbrW5IG2QJHzdWwx_ZAddKt4DsDGsseRgh6T32hydccuX8wp4AS2fsHM9sTllEqCXIL50UBJVM5X6wMAIWgV3P6ra9JtuNqvXquO_kvaBtDdTJOUaQNOqMnB1HWwGo5LwTxF2p_p00azVBWFF8qkvWpAS6XACj8WaI8H0PBq2Ii9UfL607CRCf-Ai7kztOpwrdwb4eRQK-7RdKKCigMH6XEwkjfu57VHyBiKekNguxe5faEswIvTo2cL4HB375F0pBBXs9na-Ji70AEwfiGI9V-l2w=w650&#34;&gt;&lt;/p&gt;

&lt;p&gt;アジャイルの考え方では、要件を細分化することで1スプリント内に収め、
あくまでスプリント終了時には新機能をお客様に提供しないといけません。&lt;br /&gt;
しかし、モノによってはそうもいかないケースも有ります（と思ってます）。
（特に弊社は1週間スプリントですのでザラにあります）&lt;/p&gt;

&lt;p&gt;そういった複数スプリントを要する規模のプロジェクトに対してスクラムをどう適用させるか弊社の事例とともに紹介します。&lt;/p&gt;

&lt;h2 id=&#34;プロジェクト背景&#34;&gt;プロジェクト背景&lt;/h2&gt;

&lt;p&gt;まずはプロジェクト背景について。&lt;br /&gt;
プロジェクト開始時期は2016/04下旬で、&lt;br /&gt;
この時弊社サービス（&lt;a href=&#34;https://kawlu.com&#34;&gt;カウル&lt;/a&gt;）が抱えていた課題は下記の通りです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;リテンションが悪い（既存顧客が離脱しがち）&lt;/li&gt;
&lt;li&gt;特にスマホデバイスでの&lt;a href=&#34;https://kawlu.com&#34;&gt;カウル&lt;/a&gt;利用者の離脱が目立つ&lt;/li&gt;
&lt;li&gt;希望条件を入力して提案された物件を見るというサービスを楽しむフローに乗れないユーザが存在（自身の希望条件が何かもわからない）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この課題に対してカウル開発チームは下記解決方針でプロジェクトを進めていきました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;スマホファーストなUIに変更する(スマホベースで要件を決める)&lt;/li&gt;
&lt;li&gt;不動産購入に関する学習コンテンツの配置&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;スマホファーストについては何を今更感があるかもしれませんが、&lt;br /&gt;
スマホファーストにシフトするかについてはモバイル利用率を考慮して判断したい方針でもあったので、
十分にスマホでのサイト利用を実感した今回のタイミングで踏み切りました。&lt;/p&gt;

&lt;p&gt;要は&lt;strong&gt;「スマホユーザを中心にリテンションを改善しましょう」&lt;/strong&gt;というプロジェクトでした。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#39;https://lh3.googleusercontent.com/b5osB9bYumjeJH7ryNbZWxG1a8Ig34ZYgYo4VEVQhkh4Uv0EWDgxRyeqXhHmMnI8591_Ndk6BpHUeU-PZQHHsDTpauVeKJLyrv7efneYdfq0v5sERMtsSoKYIgXXDXaNyaL2S0LmdYB5TqEd9c3Fj7GMyW0T_m5yBPZDcGHuYYWeA66VZDi39jn-SXmTmhkfQVonUOVNhksxadRPZISBBOZ3RATsrtGbiRK6KDku7p8zhhJ0UG7rpwNXUYXP4iNCSO-YiNI9Etg4MH2Wj3mN88gMaS0S-3zS4I_tjr5C4cvq8S5Iv8zfc0grNECIAJJePTQX4YmIhxWCyQW0q_OAg0YTlaNKEgPypSE6u3jPqkGX4PFqnZf4GoOisRcv-Unbwp3SEvzAAyzw9u736HV5EC5lgUcasc8Vi7uzDAVFYdm-SGvS9TPJkgq_JJ2ftTmba0Juup7aF2hl84ntOC-pfWga5C-i_uW0H4UyTzUKn19Gjd5Kj-K-BIGiH9jgmT-uf-wEqXguJoxkacO4NHRd7laXdjeyCj6dItl_tXhYAWL9zQg-GNw4uE3UkTEYKKwiZk3tnHLo1s1ozPJjmFb5TFw8_2Ao6-w=w650&#39; alt=&#39;スマホユーザの継続利用がテーマでした。&#39;/&gt;&lt;/p&gt;

&lt;h2 id=&#34;プロジェクト-要件概要&#34;&gt;プロジェクト・要件概要&lt;/h2&gt;

&lt;h3 id=&#34;要件概要&#34;&gt;要件概要&lt;/h3&gt;

&lt;p&gt;要件（概要）は下記の通りです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;提案に対するリアクション（気になるか興味なし）を慣習化させるため、表示する提案物件を1枚に限定し、リアクションを取ると次の提案が表示されるUIに改修。&lt;/li&gt;
&lt;li&gt;リアクションについてはトランプカードを操作するような触ってて楽しい操作感に変更。&lt;/li&gt;
&lt;li&gt;そもそも購入知識がないユーザに対しては不動産購入に関する記事を提供。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#39;https://lh3.googleusercontent.com/TlCkqLDvGxIndTzx8maika1m6wwU0NuMakePoNaoTqZFUXlpWCQ8OigOslyIoZeZjAKvFE1K8Q-sjodxIHxnIQqxOH-UVN2BBtH4MZBLNkngVVHcyYzilvULauukUL94yHvFdXCUbLxrj4J7nrgOEJ4SLLfLboFWfVz_UgAF2erRBnJod8AUAIngdr7cBtSvkTJI3LdoxzhrbeIkMa6qcjUkUQKOQENF8ymxCoa3iOtpqD92RIgxDxThuUsuuwWgJdaeDftN3wFqxjb8baIRXYwwcj6K0U9uTH21xdkgkuz_tsT4sP6CEgqc5UcpIMPDz0uiUuT7jEKOA_vmRNR44cwXiYG2OJu4FplOUQxLr-qECZy7y8VtBZikMquJsIi1ZoMZmqmIx0AYH1Zmp6osZlJKkFruB39m0cG1cXlWXFflICcV0bQHtJ_Xl7gIAXMzCLv35OLUdrA2p2Uf2kKUTrZ2pB0p1YphOnO4IwXfBqoMzqDtQchKlerTGvR_iHRrFqo-TkL1u18qVavJJz3CJEG8oXHO1ZY1oUz5GZtK0vPzf4_qXCdOi0Ndq8vM_YXsXWXSg1ZEcFbWfiJjJ_9Fikz2UezS0Yo=w300&#39; alt=&#39;気になる時は右にスワイプ、興味なしの時は左にスワイプ&#39; /&gt;&lt;/p&gt;

&lt;p&gt;ちなみに技術的なチャレンジとしては今回、リアクションのたびに状態を更新する仕様のため、&lt;a href=&#34;https://facebook.github.io/react/&#34;&gt;React&lt;/a&gt;を本格的に導入しました。
また提案カードを右に左にさばくUIに関しては&lt;a href=&#34;https://github.com/gajus/swing&#34;&gt;swing.js&lt;/a&gt;を導入しました。&lt;/p&gt;

&lt;h3 id=&#34;スクラムによる管理-スプリントの適用&#34;&gt;スクラムによる管理（スプリントの適用）&lt;/h3&gt;

&lt;p&gt;ここからが本題です。結論から申し上げますと、本プロジェクトは4スプリント消費する結果となりました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#39;https://lh3.googleusercontent.com/bOhDmdJ8YH43fX5RnWZHdDCWMfBXLd59SC1DsoQPZ9gCmWK0j_lge9872lCZDen7sm7H7hqF6Ye6r4DL8cN-Rv636B3G_8tiB2_mFdyXbx5f52xAgu3pudMIIW1oO9sRmfcmm6CHNlNPwTwjqBrNTURLgz5JWgOIOGim0tfhG8Ar0y9HQo3bdXuOhdmdt4EcRMj2592cuaUDWWGh9ZEykdd8Mz5Ezx1l2JYpxlpXRZVvd_FCtVYsxb-5IJ2RdihyBgPKG3FE0emHiBmBEJXcj6trjPUYWC8YOH_8fgEMeFEIREsn8zcSsbRlL7YAfJjorwUVtmj4GRKCK_7Mubm-0qgTDP0m5Z0yjK3RFRfp4YGlOTx4nCyK7OHTHTghiwk6mQjwWe0aoOdCZZ4m-cc9rYlFH2V0IuzXwkgxDcJHoWeWSZGq2hOjHdISNbZy3LLgDGV-k5emE4x5AenF0D25xFLe-3T4EmxJ2KtaJe2YPrVkdUog3_XDyaTOpIOnVmHF0RYmfpLXYZ8obZ7gt-dnmZEHSj9lrq9hrN85z5M6EpEKHDBxhdUWNPX_3R7rauEV8nd2DWic023p2TjkF3-HlAb5fVHKaN8=w650&#39; alt=&#39;※GWのため途中空きがあります。&#39;/&gt;&lt;/p&gt;

&lt;h4 id=&#34;第1スプリント&#34;&gt;第1スプリント&lt;/h4&gt;

&lt;p&gt;技術的検証、UI検証、ユーザヒアリングなどを行いながら&lt;br /&gt;
そもそもニーズあるの？やるとしてできるの？UIとして要件を満たせそう？など&lt;br /&gt;
手戻りが許されないissueから潰していくようなスプリントにしました。&lt;/p&gt;

&lt;h4 id=&#34;第2スプリント&#34;&gt;第2スプリント&lt;/h4&gt;

&lt;p&gt;2スプリント目では（より詳細な）要件定義、デザイナー調整（外部）、設計に充てました。&lt;br /&gt;
スプリント全て消化するほどのタスク量はないため、スプリントの後半は別案件の開発をしていました。&lt;/p&gt;

&lt;h4 id=&#34;第3-4スプリント&#34;&gt;第3, 4スプリント&lt;/h4&gt;

&lt;p&gt;本スプリントでは前半で外部デザイナーさんに2日程度来社してもらい、がっつりデザイン。&lt;br /&gt;
その後、開発、テスト、そしてリリースという流れでした。
当初は第3スプリント内でリリースを目指していましたが、開発ボリュームが想定以上に膨らんでしまったため、&lt;br /&gt;
第3スプリント内でのリリースは間に合わず次のスプリントでのリリースとなりました。&lt;/p&gt;

&lt;h2 id=&#34;プロジェクト-スクラムの振り返り&#34;&gt;プロジェクト、スクラムの振り返り&lt;/h2&gt;

&lt;h3 id=&#34;良かった点&#34;&gt;良かった点&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;プロトタイプのスプリントを設けたことで技術、UI検証に十分な時間を割くことが出来た。&lt;/li&gt;
&lt;li&gt;幸運にも優秀なデザイナーさんご協力頂けて、早期リリースが実現できた。（※完全にデザインありきだったので、&lt;a href=&#34;https://dribbble.com/noga419&#34;&gt;野上さん&lt;/a&gt;に今回ご協力いただけたことに本当に感謝しております！）&lt;/li&gt;
&lt;li&gt;当初の目的であるリテンションについては如実に改善の傾向が見られる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#39;https://lh3.googleusercontent.com/Ww8hew5x3tqBeN4PV-fixXAssyYbWh48t9Y7NiUpszShShPTcLJt0YxtEYtOJLezr4mmlT0LLy8ZleCBf8V4rDliZbVfNEuIOglZnpTAohnYgcMNWqzMjYdOWWiNuotnBRB1b0aV_R1u5-P61wTEvsrOS7aQxx0q4cmWqOPURzKXKwR4wvxD115O9SwSes1RgG2VJUOGJWrdwPrXdza34-3kD945v7prVcZTjZIJToCYx9ES8P4GBlrsm9lzUAj5pYpWa-ix1TBHtbV8cEznvFA5b62WpCbUOuOVJj-KUQFy8j_n1iC484nw4vcDh-xwhV2bVj47xZM1Fc2uhntfhV1Uq1adzd4zjI7LPjGHBgi7u1YfjX51MT489fqkFUTeSN3FctPvDoSZrlX4IKN0REGtQ7qlOUll9qDy_n9Q6vB7e5OTjzg7PcFQhP-ge0axsXo-gqazP3kZ-VmteG1GVVDe_Y63YhI2N80F1j4oE5OuQBwodbMfs6LWtxbWd9PfnLzJdhVY5s5TnxBxGId_98GrFjUDJS3L62XvSzo4iYON2yZnfXkgFRmvba6yU2-XDKQ-iB4XLz4iREFuDpB2sSWGujTY8Ws=w650&#39; alt=&#39;改善したリテンションに関する指数&#39;&gt;&lt;/p&gt;

&lt;h3 id=&#34;改善点&#34;&gt;改善点&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;結果として良かったものの事前のユーザヒアリングが不足していた。（ユーザが求めていないモノを作ってしまわないかというリスクへの対処）&lt;/li&gt;
&lt;li&gt;デザイナー調整の開始が遅すぎて普通だったらありえないようなギリギリのスケジュールで進めてしまった。(&lt;a href=&#34;https://dribbble.com/noga419&#34;&gt;野上さん&lt;/a&gt;がスーパーデザイナーで助かった。。。)
&lt;strong&gt;ああ、専属デザイナー欲しいよ！（絶賛募集中です）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ということで今回は大規模プロジェクトとスクラム開発の適用をテーマに紹介させていただきました。
ありがとうございました！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>観光名所ならぬ開発名所？熱海で開発合宿♪</title>
      <link>http://techblog.housmart.co.jp/2016/04/26/atami_de_sprint/</link>
      <pubDate>Tue, 26 Apr 2016 08:04:13 +0900</pubDate>
      
      <guid>http://techblog.housmart.co.jp/2016/04/26/atami_de_sprint/</guid>
      <description>

&lt;p&gt;Housmartの宮永です！&lt;/p&gt;

&lt;p&gt;先週（4/18 - 4/22）は熱海で開発合宿（スプリント）を開催しましたので、&lt;br /&gt;
そのことについて書きたいと思います。&lt;/p&gt;

&lt;p&gt;どんなに素晴らしいオフィスでもずっと同じ場所で作業をしていると&lt;br /&gt;
何となく集中力がなくなったり、生産性や創造性を劣化させていたり、というか根本的に飽きてきますよね（笑）&lt;br /&gt;
ってことで試しに今回は環境を変えて熱海でスプリントをしてきました。&lt;br /&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;合宿スケジュール&#34;&gt;合宿スケジュール&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#39;https://lh3.googleusercontent.com/8kmxKjIRDUCCHAgmF-3MWOq8VzEcZzw2Z1kD_4BE2H6R0OD8no8_UFnT6uHwdLvXkcA_OL4qtDHcXCWzateKftT0SsWp2z1SlpRPh4b9rq4_te4qDtOCnVlVqT59rA77-fLDZ8GrVXaXCIx72lsHCkEMTQkkg_-Y5ZJX6sINA0t8znSfvkIhPvqYUq7LBiubXM6SFu0R5KYIpPYWIrXYB1OVr0ro_HjOgUFrU451Dap4Q_YNMzel1v35XzQ0toNOuzGl2Goc0G04-8Whr66ibdtt9WSPyIym_HGXoD9UarIB0Jth2jGdPkk_84D8hm4i48xcc5QjVRY8ggpUikHLLZGXMBPkZDMoeKRO8_7xQvlD8ELmgjcG614UFS9aILPdfD-WD5Xk2L6_6dAs9WgEwGTVV2dC0MXbgSumasl5Y6xn1B2CNUkTSO-BApkerqcA5xIPK46d8yg6YzqO55bAiscEAEKMtYd7clTS_f5q_ObT-mRFOww9U6S06aBtH8KLv_dF2lT0MLEbkcqYWsP8zDDv-eQDLwegH7rAVGLQtaPZnbjSWano7ddeNssSqOpjnIN4=w650-h453-no&#39; title=&#39;スプリントスケジュール&#39; alt=&#39;１週間の流れ&#39;&gt;&lt;/p&gt;

&lt;p&gt;過去ブログ(&lt;a href=&#34;http://techblog.housmart.co.jp/2016/03/14/dev_cycle/&#34;&gt;スタートアップのCTOになって2ヶ月で作った開発サイクル&lt;/a&gt;)でもご紹介させていただきました通り、弊社は1weekスプリントを採用しております。&lt;br /&gt;
事業サイドのメンバーはオフィスを離れられない事情もあったので、&lt;br /&gt;
スプリント計画だけ（月曜日）オフィスで過ごし、火曜ー金曜を&lt;span style=&#34;color:red&#34;&gt;男３人で&lt;/span&gt;熱海で過ごしました。&lt;br /&gt;
※開発チームの自由な行動をいつも許容してくれる針山さん、三瓶さんにはいつも感謝ですm(__)m&lt;br /&gt;
※TOP写真に出てくる女の子は出てきません。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;仕事場としての熱海&#34;&gt;仕事場としての熱海&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/xm08OMtE9OqAOhCo8m0gjzUSnweeANNMt7ulP0DyrQoVQbeNZplB9zurd3LKLR-7S7O0NmuSjXuYwA-NFEkDXn064YtDGHpnSCsXn8fVSyuXER2hFWGKwBis7x5N4aYikyrfqFZFkEwixRYq56VKU1ISQMbIXqVHhZDv-4XoC5fnws5OoBXG3vqhda34JGBg8a2EcA0Lyi3uXyFF8P4zLwxcpCi_JdwN4WevyDlejzM8RTF5Wvll3MXeWkzawJqiE-SRvWqRhP0LfvY5wEyDHT9rUQS7sNn7zKnuzY0Ah53rTAjWOreo17Wm5tSlUOFqFIc48xmQrxM2_t9n9g4qkDdFPO0LSIKL0BGeuvdeTZ4lam8pnW9e98aMsF64N6GGp5m-hqGOe_NVcM6ifcW9DY7OMMijHmsq3TOMmh15vjqk2HglmGqgNgmf5VMjLioxr-1ihHq3mc9WmmM1tUcBZpeXESl5nQ7QwfESuqOUO2vcweOzuvvdnRs-sf62homk7etSewN12LV68QxpcGT9JKGcV_7E_vtWTp-wsRT7diNb3Y7eh6_7h8XUHiECPBRRHenl=w650-h958-no&#34; title=&#34;atami_sea&#34; alt=&#34;熱海は景色が最高でした。&#34;&gt;&lt;/p&gt;

&lt;p&gt;観光場所としての熱海はこの時期温泉を軸に、釣りに行くもよし、名所を回って楽しみもよし、海を散歩するもよしといった感じになるかと思います。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/e-x0IpMplf5xWgc3M4BTMwExsTXdjK3fv4dffI62wJeK5ZclYQL5Fbz5HqZq9cIOP_p2mVPc6HGmK3e51LTJJwIfQkT6uSLejzJ0XeyIUNzbYoA58QqhJ4BHktP527SSNtlAG25khnikK-uBWuUQC5a3-by_lp3zMnk6-8LCcQ4XFNSA86CVGkwjqHB5K83NurdxzXCVjP9Hp4N22YzResO5gR465PmHygeyXUY9sh2Ho6xPBkIfDruVutuj1NQufKyuAJdYOOcYoYzrHK2-Rpv3uJuH1D1ojcRIfG_zFDNyMK1Mt7MO1Q31hYQ38-4oq4mCyindZKxU1ranXnCbA2lzTMD_gWHGsf1aCLB4HKcOCr7KZ1N0-2GjmexxWhrwZ57JvL8FcCjxG9pgZDxYeQgq3gS1GY6PNygaKqeUdcqxHA-WjZvyRBL7Rr7-h8R0IaRqMbAjmPHxgGv5iFH6mfNapjpfICB9GjwAJu-i3UP-aRTHIAW2dJ6cbNQvwKV7T1KNrvFcKKE58BH4DYtv_9UkNWc4BndQMkdaEmA5zMUr2Lup_MTuKNK-hi62W_oA-BZz=w941-h720-no&#34; title=&#34;働く、休む、働く・・が永遠と繰り返されます。&#34; alt=&#39;働く、休む、働く・・が永遠と繰り返されます。&#39;&gt;&lt;/p&gt;

&lt;p&gt;仕事場として熱海を見ると、釣りをする以外は長時間遊んでしまうような誘惑が少なく、&lt;br /&gt;
温泉や食事など短時間でリラックスできる娯楽が多いので、こまめに休憩を挟み、緩急つけたリズムの良い活動が出来ます。&lt;br /&gt;
開発して、美味しいご飯食べて、開発して、温泉つかってのような半恒久的サイクルで、１週間過ごせたかと思います。&lt;/p&gt;

&lt;p&gt;日中のネット環境については何も考えずに行きましたが、たまたまWi-Fiが利用できるカフェを見つけられたので
大変お世話になりました。（&lt;a href=&#34;http://caferoca.jp/&#34;&gt;CAFERoCA&lt;/a&gt;さん連日ありがとうございました。）&lt;/p&gt;

&lt;h2 id=&#34;所感&#34;&gt;所感&lt;/h2&gt;

&lt;p&gt;そんな熱海スプリントを振り返ると、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;東京から近いため移動疲れなし&lt;/li&gt;
&lt;li&gt;（先述した通り）熱海には遊びの誘惑が少なかったので開発にガッツリ集中できた&lt;/li&gt;
&lt;li&gt;気分転換が適度にできたので作業も捗った&lt;/li&gt;
&lt;li&gt;美味しいものを食べて幸せになった&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;反省点としては&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;タスク管理（主に記録）が結構雑になってしまった。。。(非日常が日常的作業を忘却させる)&lt;/li&gt;
&lt;li&gt;ディスプレイがないと結構辛い（普段使っている大きめなディスプレイの有り難みが分かった）&lt;/li&gt;
&lt;li&gt;話しあいになるとホワイトボードが欲しくなる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;などなど勢いで出発したため、準備不足を露呈した結果に。。&lt;/p&gt;

&lt;h2 id=&#34;special-thanks&#34;&gt;Special thanks&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#39;http://caferoca.jp/wp-content/themes/roca/imgs/RoCA_img.jpg&#39; width=650&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://caferoca.jp/&#34;&gt;CAFERoCA&lt;/a&gt;さん&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;日中の作業場所として連日お世話になりました！&lt;br /&gt;
個人的にはここのぐり茶が美味しくて毎日飲んでました。&lt;/p&gt;

&lt;p&gt;静かで落ち着いた雰囲気を醸し出す素敵なカフェでした。&lt;br /&gt;
&lt;hr&gt;
&lt;div class=&#34;airbnb-embed-frame&#34; data-city-link-index=&#34;1&#34; data-eb=&#34;1460550563_3fq5NvEuvlW/2RAS&#34; data-eu=&#34;bqBUVANHr9EOkihHlErqNJ3WctOp9xGaehbtddxBJYox7oIRpje/fxuJk0kx lq0X8EdvvVl+aTxfu0ygWYeGPmcPI6rRuYpB4fcO0O0ybM5Bkvg4JPx8GWdb +hX0k1WUHyZRfDFxmUDfyHeV+ZsOq/0yKIqhN/zN96iRjGYkqdu/QvGw0ezM R1uMBtj9+5JCFd5TRzdSymjOwgnb8Hgl2me+0/iBdE3ytNfQ4ANIiCJXn8dY M28xtwUokhoBMBpPfjXV6SeLFDpRjzj58YAPHn1L4N2I9g4Eq3isow2aEnhk +j8JIVvN6dwVsMXQClg1iGKWKsfNad5WR5A2iw/yJQ== &#34; data-embed-source-type=&#34;p3&#34; data-trigger-source-type=&#34;p3&#34; data-listing-id=&#34;4248292&#34; data-photo-url=&#34;https://a0.muscache.com/im/pictures/67373651/f24cd987_original.jpg?aki_policy=x_large&#34; data-view=&#34;listing_frame&#34; style=&#34;max-width:600px;margin:auto;transition:height .2s;&#34;&gt;&lt;img src=&#34;https://a0.muscache.com/im/pictures/67373651/f24cd987_original.jpg?aki_policy=x_large&#34; style=&#34;max-width:100%;&#34; alt=&#34;&#34;/&gt;&lt;div&gt;&lt;a href=&#34;https://www.airbnb.jp/rooms/4248292&#34; rel=&#34;nofollow&#34;&gt;&lt;h4&gt;熱海の24時間温泉＆オーシャンビュー&lt;/h4&gt;&lt;/a&gt;&lt;div&gt;熱海市, 静岡県, 日本&lt;/div&gt;&lt;blockquote&gt;熱海駅から徒歩20分､ﾊﾞｽで10分｡快適な1部屋ﾏﾝｼｮﾝ｡理想は2人､最大4人まで泊まることができます｡ 部屋からは熱海の海と山と街を一望できます｡花火大会は圧巻の一言です｡ 温泉､ｷｯﾁﾝ､冷蔵庫､ｴｱｺﾝ､ﾄｲﾚ､ﾃﾚﾋﾞなどご用意しております｡ 2人でも4人でも宿泊可ですが2人が最も快適な広さです｡ This room is only for Japanese people.&lt;/blockquote&gt;&lt;/div&gt;&lt;script async=&#34;&#34; src=&#34;https://www.airbnb.jp/embeddable/airbnb_jssdk&#34;&gt;&lt;/script&gt;&lt;/div&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;宿について&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;知人のお家ということで今回は利用させていただきました！&lt;br /&gt;
３人で利用しましたが広さ的にも十分でした。&lt;br /&gt;
またこのマンションには温泉が付いているんですがこれがまた素晴らしい。&lt;br /&gt;
海を見ながら温泉につかってと贅沢な場所でした。&lt;/p&gt;

&lt;p&gt;Airbnbにも出ているらしいのでぜひ興味のある方はご利用くださいm(__)m&lt;br /&gt;
&lt;a href=&#34;https://www.airbnb.jp/rooms/4248292&#34;&gt;https://www.airbnb.jp/rooms/4248292&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;最後に&#34;&gt;最後に&lt;/h2&gt;

&lt;p&gt;今回はカウル開発チームの開発合宿について紹介させていただきました。&lt;br /&gt;
カウルでの働き方としても新たな試みとなり、とてもよかったので、これからも定期的に実施したいと思います！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>スタートアップのCTOになって2ヶ月で作った開発サイクル</title>
      <link>http://techblog.housmart.co.jp/2016/03/14/dev_cycle/</link>
      <pubDate>Mon, 14 Mar 2016 10:43:07 +0900</pubDate>
      
      <guid>http://techblog.housmart.co.jp/2016/03/14/dev_cycle/</guid>
      <description>

&lt;p&gt;Housmartの宮永です！&lt;/p&gt;

&lt;p&gt;今回はカウル開発チームの開発サイクルを紹介させていただきます。&lt;/p&gt;

&lt;p&gt;好ましい開発サイクルはサービスや企業、組織規模などに応じて
&lt;br&gt;異なるものだと思いますので、このブログでもまずはチーム体制など
&lt;br&gt;開発手法の採用背景となるところから説明いたします。&lt;/p&gt;

&lt;h2 id=&#34;チーム体制-サービスについて&#34;&gt;チーム体制、サービスについて&lt;/h2&gt;

&lt;p&gt;カウル開発には５人のメンバーがいます。&lt;/p&gt;

&lt;p&gt;エンジニア：３人&lt;br /&gt;
デザイナー：１人&lt;br /&gt;
プロダクトオーナー：１人&lt;/p&gt;

&lt;p&gt;実作業ベースで5人の役割が決まっていますが、&lt;br /&gt;
サービスをどのように良くしていくかは皆で話し合って考えます。&lt;br /&gt;
&lt;img src=&#34;https://lh3.googleusercontent.com/GdlKYeSVOlFEptMb58q8dWz0AsnXtGYH64ZCLjsGIgzbqLXEWrf-oCXBdLLaTDqTPd-HCdt-U8_tSftgNnygWXsLIlL_zAqOitDaaTNtjKxQ4U6kFosC010T5HPudK6wNicrGaQw9aHdtPwVaXGxwRu1Z5szy4wn6kIQTGtFTILUuV-4MU7PfHcgT-kfja008ZvBYk9WGBGU-qff7evePLb7NyL3U891byN60biTi4KrgVeJi10ncRXb08AuE7AmJBub53In9DJDe2akl2bCUw9t8OuDCTWIS-TCHgQv-P_1mDJvOD7AWn6BScPVr06wzweL5RcOD7OFCtO9Z3AOIeZVU7pBhgZuxOZRDHUaTfcvnVStKn_endCYTU04A-TRydky3BNsLuQJMjzY8jqtMnKe3iahK1NpcxcbgXz9A3QXQHtPvlObXE1jtNJMP-R4kIOhEpuAfh24hry9umPMKiI99bFsTzn-YNNdgc6TEbKYZFzBRS7pXbxLLgABSP7hWU0B93jpyVU3dBtUTDrpW2oCQDgyyQnXxQ5cgOyH_I_Cy6bq4tiReIlVfysPqSkCXiU=w650&#34; title=&#34;カウル開発メンバー&#34;/&gt;
&lt;br&gt;&lt;br&gt;&lt;br&gt;
サービス（&lt;a href=&#34;https://kawlu.com/&#34;&gt;カウル&lt;/a&gt;）はリリースされてからまだ２ヶ月弱で
&lt;br&gt;サービスローンチ後に想定外の運用業務が発生したり、ユーザからの改善要望も多く、
&lt;br&gt;開発すべきこと（開発優先度）は日々変化しかなり流動的なものとなってます。
&lt;br&gt;そのため、要件リストの優先度付けをこまめに行う必要があります。&lt;/p&gt;

&lt;h2 id=&#34;開発サイクル&#34;&gt;開発サイクル&lt;/h2&gt;

&lt;p&gt;上記のような背景に伴い、
&lt;br&gt;&lt;b&gt;「少ない人数で要件の流動性に対応しながら開発する」&lt;/b&gt;
&lt;br&gt;ことが求められているため、弊社では&lt;b&gt;スクラム開発&lt;/b&gt;を採用しています。
&lt;br&gt;要求の変化に対応するため、１スプリント&lt;b&gt;１週間&lt;/b&gt;と恐ろしく短いです。&lt;/p&gt;

&lt;h3 id=&#34;スクラム開発の流れ-スプリントフロー&#34;&gt;スクラム開発の流れ（スプリントフロー）&lt;/h3&gt;

&lt;p&gt;大まかな流れとしては&lt;/p&gt;

&lt;p&gt;①皆でがつっと話しあって&lt;br /&gt;
②ゴリゴリ開発→リリース&lt;br /&gt;
③振り返る&lt;/p&gt;

&lt;p&gt;とかなり標準的なものです。&lt;br /&gt;
&lt;img src=&#39;https://lh3.googleusercontent.com/Q9t_vONMYxqgNo1MJXKrBINR9tK3YIFQK-S2r-G3gQVbKzUfvql1Vqqd_mC7LNne61ahqDOZPzs_-kjjoGRLT1hfQG1pUlq_wHbQywV7k8QhI4xWvjBOgFVRY5U-8nzmzxVkyt9Cu6JJpZ0ujB1gGNkqRO9tCM2W4kZ7rqPL_b0tkMDilugbbMjDhHnDf8xu0XZMjhdqniN_B7Gvps0Q8PMeNuwn1SRTt0XtQf013MOXCXFAemy5pevRSxN2S7KaJW1LkwKCi6nM5oDGQGGRiQic7yTx70p2Sgmzqj253KkktGUj8N1k-QLvO1VJ_Pf8wtUHlspub2rLQoThTOxKnxqmFf0fYI2ERAypcMepY8yeTOqB3RoWM3tmc9nJ_W1fhHII_VziR6vWlD80Z-Lh4UCLJWNkWMZNdIK5j7uAhlm-DAa-eNQZSlBqL0ADeA-CS2qEmCsBxkpUPQb_gnHJ_ilZEKhAxWmxKme9HZbHAUkukGXx23fQs70m98bvruby18duZCuxjkP4tbEhtF1j3bZF0ToC3kqQxAd6NDrT4yd-VtJz5LLQJ5P8E3eDJiGpQKM=w650&#39; title=&#39;スプリントフロー&#39;&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;p&gt;各曜日の作業詳細&lt;/p&gt;&lt;/p&gt;

&lt;h4 id=&#34;月曜&#34;&gt;月曜&lt;/h4&gt;

&lt;p&gt;「プランニング（バックログリファインメント、スプリント設計、仕様検討、設計）」&lt;br /&gt;
JIRA上で管理しているバックログチケットを整理、優先度付けして、1スプリントのゴールを決めます。&lt;br /&gt;
優先度付の基準はサービス軸、開発軸両面から判断しています。
（直近のサービスの課題は集客だからこの開発をしよう！や  メディア露出があるので、負荷対策をスプリントの中心にしましょう！などなど）&lt;/p&gt;

&lt;p&gt;スプリントのゴールが明確になったら、次は仕様検討や設計に入ります。&lt;br /&gt;
遅くても火曜日から開発のため、仕様や設計に関する課題はこの日に全て話し合います。&lt;br /&gt;
タスク化した後、タスクを割り振ってこの日は終了です。&lt;/p&gt;

&lt;h4 id=&#34;火曜&#34;&gt;火曜&lt;/h4&gt;

&lt;p&gt;「開発！！開発！！開発！！」&lt;br /&gt;
それぞれ割り振ったタスクを元に作業を進める。今は主に開発案件が多いので、
大体火曜は開発が中心。小さな開発案件の場合はテスト通過後、その日にデプロイすることもあります。&lt;/p&gt;

&lt;h4 id=&#34;水曜&#34;&gt;水曜&lt;/h4&gt;

&lt;p&gt;「すいすい水曜日」&lt;br /&gt;
スタートアップ企業とは言え、投資は大事ということで水曜は技術投資の日にしています。&lt;br /&gt;
何でもやって良い日ということで、各自興味をもった技術に触れて知的探究をしています。&lt;br /&gt;
弊社のマックス（松江さん）はこの日が一番楽しそうにしてます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#39;https://lh3.googleusercontent.com/Oc0DHhyDd-dYSIDCg8WJwcnEoLDA7HfirWqfh3ZkjzJam-EUhHAgMEtmjkgeWUPHN52NdwMxB6A=w650&#39; title=&#39;マックスが楽しそう&#39;&gt;
&lt;a href=&#34;https://theta360.com/ja/&#34;&gt;theta&lt;/a&gt;で遊ぶマックス&lt;/p&gt;

&lt;h4 id=&#34;木曜&#34;&gt;木曜&lt;/h4&gt;

&lt;p&gt;「テスト！テスト！デプロイ！」&lt;br /&gt;
スプリントの終了が迫っている！ということで
デプロイに向かって皆頑張ります。
木曜の午後（夕方まで）の間はユーザアクセスも落ち着いているため、
このタイミングでリリースすることが多いです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#39;https://lh3.googleusercontent.com/XtYAMXjVhs_ArSPX7-eOCxlK24TNueuM6-fNl230x5CYSwf8WdSXKSqo8I5Fl4O02l-cIVxtKGyiFZw1B_lGf4WmAbgsNQAkjbkYp58fidiK03mg5qEHtZxW5f8wTzSEDqokpTJ8L9wwi8GPsH_dWAEyy243N3Qk4yFrFxsAwXbNEBvTHmq06BbmpvfctuEJrzzlVzLoTHkVJ6W3_sP4w7h8QBAx3CvOOAUZUFSLuny6L6Rlrcmf_WMy3sOgeJ_2Laqk_SBwmjepY5q7PWYGh-rZ2eA4WE6-kjzBHZme7NJJyVGZ4jf2jHgUFLQLEemwNi_Z7BnoNiLvU3c8lvoiWNsZxqgJrJaCcTkRQ67sqnmlVnqpKMfJOYPC15stCkRiLAP8AUosvORxAucNq_k3ljohrkf2baLoIoJfvs_R7_6UbsvrCdMeLbVy0i7ho4sXuiByBz8SgnmF29EdWf6Y4igQGkJCbsjNlhuZBAnDPWeWKRZQxTHMc9ClvOQZWkfB7t2Cd2q3w6O_5a32GR-Pie357lscympWU9PcPX1ZChbckp_Ah0xjrv1E3FKjSuSmKIM=w650&#39; title=&#39;プロダクトオーナーが喜んだ顔&#39;&gt;&lt;br /&gt;
待ちわびたリリースにプロダクトオーナーもウキウキ&lt;/p&gt;

&lt;h4 id=&#34;金曜&#34;&gt;金曜&lt;/h4&gt;

&lt;p&gt;「振り返り＆改善デー」&lt;br /&gt;
１週間のスプリントを振り返ります。振り返りで上がった課題のうち、１日でできる改善案を皆で検討します。
その後、タスク化してそれぞれが1日で終わる範囲でこなしていくという流れです。&lt;br /&gt;
その他にも開発環境改善系やサービスとして考えると優先度が高くならないタスクを改善デーで消化することも多いです。&lt;br /&gt;
（コードリファクタリング、CI化など）&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;スクラム開発を通して&#34;&gt;スクラム開発を通して&lt;/h3&gt;

&lt;p&gt;実践期間だいぶ短いですが、スクラム開発を振り返ります。&lt;/p&gt;

&lt;h4 id=&#34;良い点&#34;&gt;（良い点）&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;限られたリソースの中で、効率よく優先度の高いものから対応できている&lt;/li&gt;
&lt;li&gt;1週間を1スプリントにしているので生活リズムが浸透しやすくメリハリのある日々が過ごせる（月曜は話しあいの日、水曜は自由な日などなど）&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;悪い点-改善点&#34;&gt;（悪い点、改善点）&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;チーム全体の生産性の向上までは振り返られてはいない。（本気では取り組めていない）
&lt;br&gt;（生産性向上開発環境整備、自動化に対する動機づけができていない）&lt;/li&gt;
&lt;li&gt;かなりのスピードで開発しているつもりですが、バックログは一向に減らない。。。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/aL5simLXtjlVg4Nb8tweg2s4HK-vcoT-v7XNJAxtxUiX7xKJSRaCfMHsTZrGa4jSqlvc1TS7oEHuSCRtC7CSyvc_tMEmGs3YdWNKKZLqp26_HMjtt4k9oQktMVC4EIBe__a7E6tTNLj2jIvGyXAHC6ZGnBdNAJyhlbf0rNXZcMkFnl7iqUu4KWTCwCiO27pROr2H67EAOVyn1xWQc5YUi0DJKc8Xf4je3eQtn6-59WwNgk5uPKLzT138yl7-rMZLjqQ-W9okFPbG5rrBlixfeaHCsvPlJlsLN90twTCaqeghrFcV8MqEClM8zxTGJc_dknxr7XXIc4eA8Nr1iaWRzE9mPWYcMVJ8tHdWwdJM332UC8_BMSVbcnYKHMZ17zGAZxdrT8bSCFpvQfrO1LJe09tiSMVPfiz5U9sOuDP6hGVp6gB5b784M4UbXmioF5YTG0lIIxecRw2SIG-r0dzDsImeCayvgNX-pwdmSubMZOU3UlpNm6tpKnEJqRQCNdoaOJscwRbNpKfE5kiQO_xJebvO3RMyUj2IOxfGTiLZfDv4ebp8ezAIdKE7ILswOMubfhY=w650&#34; title=&#34;Jira&#34;/&gt;
※赤線がタスクの増加、緑線がタスクの消化を示します。&lt;br /&gt;
やりたいことがどんどん増えてなかなか消化が追いつきません。&lt;br /&gt;
(生産性の向上が今後の課題です)&lt;/p&gt;

&lt;h2 id=&#34;最後に&#34;&gt;最後に&lt;/h2&gt;

&lt;p&gt;今回はカウル開発チームの開発手法について紹介させていただきました。&lt;br /&gt;
おかげさまでユーザ様も増えてきており、やることはたっぷりありますが、&lt;br /&gt;
引き続きカウル開発チームはがっちりスクラムを組んで邁進してまいります！&lt;/p&gt;

&lt;p&gt;以上。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>