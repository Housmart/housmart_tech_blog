<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on カウル Tech Blog</title>
    <link>http://techblog.housmart.co.jp/categories/development/</link>
    <description>Recent content in Development on カウル Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Powered by [Kawlu](//kawlu.com).</copyright>
    <lastBuildDate>Mon, 06 Aug 2018 18:00:00 +0900</lastBuildDate>
    
	<atom:link href="http://techblog.housmart.co.jp/categories/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>実際のサービスをRails＋Vue.js(Single File Components)を用いてSPAへリファクタリングした話</title>
      <link>http://techblog.housmart.co.jp/2018/08/06/vuejs-single-file-components-in-rails/</link>
      <pubDate>Mon, 06 Aug 2018 18:00:00 +0900</pubDate>
      
      <guid>http://techblog.housmart.co.jp/2018/08/06/vuejs-single-file-components-in-rails/</guid>
      <description>&lt;p&gt;エンジニアの西辻です。&lt;br /&gt;
今回の記事では、Railsプロジェクトで一部の画面のみをVue.jsを用いてSPA化するにあたって、その際に得た知見などを共有できたらと思います。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【アプリ起動時間を50%削減】Rails5.2からデフォルトGemに採用されたBootsnapを検証した</title>
      <link>http://techblog.housmart.co.jp/2017/12/11/ruby-gem-bootsnap/</link>
      <pubDate>Mon, 11 Dec 2017 17:00:00 +0900</pubDate>
      
      <guid>http://techblog.housmart.co.jp/2017/12/11/ruby-gem-bootsnap/</guid>
      <description>&lt;p&gt;Housmartの宮永です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://weblog.rubyonrails.org/2017/11/27/Rails-5-2-Active-Storage-Redis-Cache-Store-HTTP2-Early-Hints-Credentials/&#34;&gt;Ruby on Rails 5.2 beta&lt;/a&gt;からデフォルトGemとしてRailsの起動を高速化するBootsnapが新たに採用されました。Railsでサービス運用をしているとGem数が増加し起動時間もどんどん遅くなっていくと経験をされている方も多いのではないでしょうか。&lt;br /&gt;
今回はBootsnapに関して、起動時間に関する検証を行いましたので簡単に紹介したいと思います。&lt;/p&gt;

&lt;p&gt;なお、今回は&lt;a href=&#34;https://qiita.com/advent-calendar/2017/ruby_on_rails&#34;&gt;Qiita Ruby on Rails Advent Calendar 2017&lt;/a&gt;12日目の記事になります。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JSON API(json:api)をSwiftでいい感じにシリアライズする</title>
      <link>http://techblog.housmart.co.jp/2017/12/05/serialize-json-api-with-swift/</link>
      <pubDate>Tue, 05 Dec 2017 18:00:00 +0900</pubDate>
      
      <guid>http://techblog.housmart.co.jp/2017/12/05/serialize-json-api-with-swift/</guid>
      <description>&lt;p&gt;このブログでは&lt;strong&gt;どのようにしてSwiftを使って&lt;code&gt;JSON API(json:api)&lt;/code&gt;のレスポンスをシリアライズするか&lt;/strong&gt;について書いていきます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://jsonapi.org/&#34;&gt;http://jsonapi.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://qiita.com/advent-calendar/2017/swift&#34;&gt;Swift Advent Calendar 2017&lt;/a&gt;の6日目の記事ですので、サーバサイド実装の詳細については触れません。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Android アプリを master ブランチマージで Play Store Beta に公開する</title>
      <link>http://techblog.housmart.co.jp/2017/12/04/automated-publish-to-play-store-for-android-app/</link>
      <pubDate>Mon, 04 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>http://techblog.housmart.co.jp/2017/12/04/automated-publish-to-play-store-for-android-app/</guid>
      <description>&lt;p&gt;アプリケーションエンジニアの西辻です。&lt;br /&gt;
今回の記事では、弊社内で開発している Android アプリを master ブランチマージで Play Store Beta に公開するまでの方法についてご紹介したいと思います。&lt;br /&gt;
また、今回の記事は &lt;a href=&#34;https://qiita.com/advent-calendar/2017/android_second&#34;&gt;Qiita Android その2 Advent Calendar 2017&lt;/a&gt; 5日目に参加しています。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>複数の rails プロジェクトが共存する開発環境を Docker 化した話を晒してみる</title>
      <link>http://techblog.housmart.co.jp/2017/10/23/migrate-local-dev-env-to-docker/</link>
      <pubDate>Mon, 23 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>http://techblog.housmart.co.jp/2017/10/23/migrate-local-dev-env-to-docker/</guid>
      <description>&lt;p&gt;アプリケーションエンジニアの西辻です。&lt;br /&gt;
今回のブログでは、弊社のローカル開発環境を &lt;code&gt;Docker&lt;/code&gt; 化した話をご紹介したいと思います。
このブログでは、なぜローカル開発環境を &lt;code&gt;Docker&lt;/code&gt; 化する考えに至ったのかに始まり、&lt;br /&gt;
具体的にどのような方法で &lt;code&gt;Docker&lt;/code&gt; 化を進めていったかを振り返りながら書いていきます。&lt;br /&gt;
また、&lt;code&gt;Docker&lt;/code&gt; 化したことで受けた恩恵などを最後に書いて終わります。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>これからCIを導入したいそこのあなた! Bitbucket Pipelines はいかが?  ~Bitbucket Pipelines の活用事例~</title>
      <link>http://techblog.housmart.co.jp/2017/08/30/how-to-use-bitbucket-pipelines/</link>
      <pubDate>Wed, 30 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>http://techblog.housmart.co.jp/2017/08/30/how-to-use-bitbucket-pipelines/</guid>
      <description>&lt;p&gt;アプリケーションエンジニアの西辻です。2017年4月からHousmartで主にAndroidアプリ開発を担当しています。今回のブログでは、弊社のCI環境としてメインで利用している Bitbucket Pipelines についての活用事例についてご紹介したいと思います。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SwiftのOSSライブラリに機能を追加したときに心がけたこと</title>
      <link>http://techblog.housmart.co.jp/2017/08/20/contribute-to-reactive-swift/</link>
      <pubDate>Sun, 20 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>http://techblog.housmart.co.jp/2017/08/20/contribute-to-reactive-swift/</guid>
      <description>&lt;p&gt;アプリケーションエンジニアの田中です。今年6月に入社して、初めてのTech Blogへの投稿になります。最近の大きな出来事は、スプラトゥーン購入をしたこと、Housmartへのjoin、そして結婚したことです。&lt;/p&gt;

&lt;p&gt;先日、何となく目標にしていた「お仕事でお世話になったOSSに機能追加する」を達成できました。今回は、私がReactiveSwiftに機能を追加した際の事前準備、背中を押してくれたものなどについて書いてみます。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>日本語でのサジェストの難しさとElasticsearchを用いた実装例</title>
      <link>http://techblog.housmart.co.jp/2016/12/16/suggester-for-japanese/</link>
      <pubDate>Fri, 16 Dec 2016 10:23:43 +0900</pubDate>
      
      <guid>http://techblog.housmart.co.jp/2016/12/16/suggester-for-japanese/</guid>
      <description>&lt;p&gt;このエントリは &lt;a href=&#34;http://qiita.com/advent-calendar/2016/elastic&#34;&gt;Elastic stack (Elasticsearch) Advent Calendar 2016&lt;/a&gt; の17日目の投稿です。&lt;/p&gt;

&lt;p&gt;こんにちは。Housmartの高松です。今回のテーマは &lt;strong&gt;Elasticsearchを使った日本語でのサジェスト&lt;/strong&gt; です。&lt;/p&gt;

&lt;p&gt;Elasticsearch便利ですよね。個人的には今から検索関連の機能を作るならElasticsearch一択だと思っているのですが、こんな便利なElasticsearchを使っても、実用レベルの日本語のサジェスト機能を実装するのはちょっと難易度が高いです。&lt;/p&gt;

&lt;p&gt;今回は実務での経験をもとに、なぜ日本語でのサジェストが難しいのか、Elasticsearchを用いた実装はどうすれば良いのかについて書いていこうと思います。
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>