<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on カウル Tech Blog</title>
    <link>http://techblog.housmart.co.jp/post/</link>
    <description>Recent content in Posts on カウル Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 03 Mar 2016 16:57:26 +0900</lastBuildDate>
    <atom:link href="http://techblog.housmart.co.jp/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>テレビ放送に向けての負荷対策(AWS x Rails の場合)[前編]</title>
      <link>http://techblog.housmart.co.jp/2016/03/03/%E3%83%86%E3%83%AC%E3%83%93%E6%94%BE%E9%80%81%E3%81%AB%E5%90%91%E3%81%91%E3%81%A6%E3%81%AE%E8%B2%A0%E8%8D%B7%E5%AF%BE%E7%AD%96aws-x-rails-%E3%81%AE%E5%A0%B4%E5%90%88%E5%89%8D%E7%B7%A8</link>
      <pubDate>Thu, 03 Mar 2016 16:57:26 +0900</pubDate>
      
      <guid>http://techblog.housmart.co.jp/2016/03/03/%E3%83%86%E3%83%AC%E3%83%93%E6%94%BE%E9%80%81%E3%81%AB%E5%90%91%E3%81%91%E3%81%A6%E3%81%AE%E8%B2%A0%E8%8D%B7%E5%AF%BE%E7%AD%96aws-x-rails-%E3%81%AE%E5%A0%B4%E5%90%88%E5%89%8D%E7%B7%A8</guid>
      <description>

&lt;p&gt;Housmart高松です。&lt;/p&gt;

&lt;p&gt;先日、テレビ東京のWBS（ワールドビジネスサテライト）で弊社サービス「カウル」をご紹介いただきました。今回は、その前後でシステムの準備として実施したこと、当日の実際のアクセス数などをご紹介します。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;WBSサイト(不動産流通に革新は起こるか): &lt;a href=&#34;http://txbiz.tv-tokyo.co.jp/wbs/feature/post_107290/&#34;&gt;http://txbiz.tv-tokyo.co.jp/wbs/feature/post_107290/&lt;/a&gt;&lt;br /&gt;
仲介手数料無料の不動産サイト「カウル」: &lt;a href=&#34;https://kawlu.com/&#34;&gt;https://kawlu.com/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;突然のテレビ取材！テレビに出るとどのくらいアクセスが来るの？サーバは何台増やしたらいいの？&lt;br /&gt;
そんな時の参考になれば幸いです。&lt;/p&gt;

&lt;h2 id=&#34;内容:08e118674fea9989bc7c591023d8b196&#34;&gt;内容&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;前提

&lt;ul&gt;
&lt;li&gt;前回の失敗&lt;/li&gt;
&lt;li&gt;フロントエンド システム構成&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;事前準備

&lt;ul&gt;
&lt;li&gt;負荷予測&lt;/li&gt;
&lt;li&gt;サーバ台数決定&lt;/li&gt;
&lt;li&gt;サーバ増強&lt;/li&gt;
&lt;li&gt;その他&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;実際のアクセス数と振り返り&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;1-前提:08e118674fea9989bc7c591023d8b196&#34;&gt;1.前提&lt;/h2&gt;

&lt;h3 id=&#34;前回の失敗:08e118674fea9989bc7c591023d8b196&#34;&gt;前回の失敗&lt;/h3&gt;

&lt;p&gt;つい半月ほど前に別の局で朝の番組にもちらっと社名を出していただいたのですが（5秒くらい）、AWSのSmallインスタンスで冗長化もせず、のんきに構えていたところ、一部のサーバが一瞬でやられてしまいました。&lt;/p&gt;

&lt;p&gt;かすっただけで右腕を持って行かれたぐらいのダメージを受けました。衝撃でした。&lt;br /&gt;
この反省から &lt;strong&gt;準備大事！&lt;/strong&gt; ということを学んだので今回はしっかりと準備をして望みました。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;フロントエンド-システム構成:08e118674fea9989bc7c591023d8b196&#34;&gt;フロントエンド システム構成&lt;/h3&gt;

&lt;p&gt;「カウル」フロントエンドのシステム構成を簡単にご紹介します。&lt;br /&gt;
基本的にはAPI（Rails x MySQL）を、別プロジェクトのフロントエンドRailsアプリケーションから呼び出す構成になっています。また、&lt;a href=&#34;https://kawlu.com/journal/&#34;&gt;自社メディアであるマンションジャーナル&lt;/a&gt;も運営しているため、Wordpressが動くサーバが別にあります。&lt;br /&gt;
SEOの観点からサブディレクトリで Web app と自社メディアの切り分けを行っており、クラウドフロントでサブディレクトリごとにアクセスを振り分けています。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://techblog.housmart.co.jp/images/20160303_01.png&#34; title=&#34;Kawlu Front Architecture&#34;&gt;&lt;/p&gt;

&lt;p&gt;今回は各EC2サーバをオートスケールグループに入れ冗長化を行い、負荷見積もりにしたがってスペックと台数を決定しました。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;2-事前準備:08e118674fea9989bc7c591023d8b196&#34;&gt;2.事前準備&lt;/h2&gt;

&lt;h3 id=&#34;負荷予測:08e118674fea9989bc7c591023d8b196&#34;&gt;負荷予測&lt;/h3&gt;

&lt;p&gt;負荷予測に関しては以下の記事を参考にさせていただきました。&lt;br /&gt;
&lt;a href=&#34;http://qiita.com/chase0213/items/b5ecd4377f60605332e1&#34;&gt;[Qiita]gatling による負荷試験とテレビ露出見積り&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;まず、総アクセス数を以下の式により求めます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;総アクセス数 = テレビ局のリーチ人数 × 視聴率 × Web検索する人の割合 (=総アクセス人数)
                      × 一人あたりの平均閲覧ページ数
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;今回はテレビ東京なので&lt;a href=&#34;http://www.tv-tokyo.co.jp/contents/ir/jpn/media/mediadata.html&#34;&gt;関東圏で約4,000万人のリーチ&lt;/a&gt;、深夜帯なので視聴率 &lt;strong&gt;5%&lt;/strong&gt; 、テレビを見てWebで検索する人が視聴した人全体の &lt;strong&gt;5%&lt;/strong&gt; と仮定し、一人あたりの平均閲覧ページ数は過去実績から2ページとしました。&lt;br /&gt;
これらの仮定の上で、放送中の総アクセス数は以下のように求まります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;総アクセス数 = 4,000万 × 5% × 5% × 2 = 20万アクセス
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;テレビすごい！&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;これをテレビ出演時間で割ると一秒あたりの平均リクエスト数(QPS)が求まります。弊社の紹介が何分間流れるかは本番を見るまで分からなかったのですが、今回は5分間と仮置きしました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;出演時間のQPS = 20万アクセス ÷ 300秒 = 平均 667 QPS
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上記はあくまで平均の値なので、この数字ピッタリに合わせて構築するとアクセスがスパイクした時にリソースが足りなくなってしまいます。&lt;br /&gt;
せっかくのチャンス、1アクセスたりとも落としたくなかったので、アクセスがスパイクすることも考慮に入れてバッファを積み &lt;strong&gt;1000 QPS&lt;/strong&gt; に耐えられる構成にしようということに決めました。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;サーバ台数決定:08e118674fea9989bc7c591023d8b196&#34;&gt;サーバ台数決定&lt;/h3&gt;

&lt;p&gt;こちらも先ほどの&lt;a href=&#34;http://qiita.com/chase0213/items/b5ecd4377f60605332e1&#34;&gt;Qiita記事&lt;/a&gt;を参考にAWSサーバのスペックと台数を決定しました。&lt;/p&gt;

&lt;p&gt;EC2とRDSで動く Rails x MySQL の構成で、1vCPUあたり100[QPS]程度のリクエストを捌くことが可能なようです。
今回の構成も参考記事の構成とほぼ似ているため、大きく外すことはないだろうということでこちらの結果をそのまま流用させていただきました。&lt;/p&gt;

&lt;p&gt;Front・APIサーバ共に10vCPU必要ということで、それぞれ &lt;strong&gt;t2.medium x 5 台&lt;/strong&gt; の構成に決定しました。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;サーバ増強:08e118674fea9989bc7c591023d8b196&#34;&gt;サーバ増強&lt;/h3&gt;

&lt;p&gt;深夜からの放送だったので、夕方頃おもむろにインスタンスを増やそうとしたところエラー。もう一度試してもエラー。
ググってみるとAWSには各リソースごとに上限が決められていて、その上限にぶつかってしまっていました。&lt;br /&gt;
各上限を上げるためにはAWSに申請が必要なようです。詳しくはこちら→&lt;a href=&#34;http://docs.aws.amazon.com/ja_jp/AWSEC2/latest/UserGuide/ec2-resource-limits.html&#34;&gt;Amazon EC2 サービスの制限&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;初期の設定でEC2インスタンスは20個までに制限されているようです。&lt;/p&gt;

&lt;p&gt;今回はAWSのサポートセンターに「テレビの放送があるので！」とメッセージを添えて申請を送ったところ、数時間後にご対応いただけたので事なきを得ましたが、危ないところでした。AWSの中の人ありがとうございました。みなさん &lt;strong&gt;是非この制限の存在を頭に入れておいてください&lt;/strong&gt; 。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;その他:08e118674fea9989bc7c591023d8b196&#34;&gt;その他&lt;/h3&gt;

&lt;p&gt;その他、会社名で検索されることも考慮に入れて、会社紹介ページや旧サービスからも「カウル」のランディングページに導線を貼り対策をしました。&lt;br /&gt;
万が一のことを考えてオフィスにスタンバイ、ピザとコーラを用意して放送を待ちます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://techblog.housmart.co.jp/images/20160303_02.jpg&#34; title=&#34;Stand by&#34;&gt;&lt;/p&gt;

&lt;p&gt;はたしてどの程度アクセスが来たのでしょうか！？[後編]に続く&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hack Day 2016ハッカソンに参加しました！</title>
      <link>http://techblog.housmart.co.jp/2016/02/17/hack-day-2016%E3%83%8F%E3%83%83%E3%82%AB%E3%82%BD%E3%83%B3%E3%81%AB%E5%8F%82%E5%8A%A0%E3%81%97%E3%81%BE%E3%81%97%E3%81%9F</link>
      <pubDate>Wed, 17 Feb 2016 16:57:26 +0900</pubDate>
      
      <guid>http://techblog.housmart.co.jp/2016/02/17/hack-day-2016%E3%83%8F%E3%83%83%E3%82%AB%E3%82%BD%E3%83%B3%E3%81%AB%E5%8F%82%E5%8A%A0%E3%81%97%E3%81%BE%E3%81%97%E3%81%9F</guid>
      <description>

&lt;p&gt;今週からHousmartで働く松江です！&lt;/p&gt;

&lt;p&gt;先日、Yahoo! Japanさんが主催する日本最大級のハッカソンイベントである&lt;a href=&#34;http://hackday.jp/2016/&#34;&gt;Hack Day 2016&lt;/a&gt;に参加してきたのでこの場を借りてご紹介します。&lt;/p&gt;

&lt;h2 id=&#34;作ったもの:3fc30d4efb0f9f17a0ee9ad6f39c20bb&#34;&gt;作ったもの&lt;/h2&gt;

&lt;div class=&#34;embed-video-container&#34;&gt;&lt;iframe src=&#34;https://www.youtube.com/embed/ZgpvXK3wfkc&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;

&lt;p&gt;スライド: &lt;a href=&#34;https://speakerdeck.com/matsue/kizukai-at-hack-day-2016&#34;&gt;https://speakerdeck.com/matsue/kizukai-at-hack-day-2016&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;KizukAIという、飲み会でちょっとした気遣いのできるAIを作りました。&lt;/p&gt;

&lt;p&gt;KizukAIは飲み会のテーブルに置くことを想定して作られており、出来ることは以下の3つです。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;ビールがなくなったことを検知してビールの追加注文、またはお冷の注文を行う&lt;/li&gt;
&lt;li&gt;みんなの笑顔を検知して、合いの手を入れたり一緒に笑う&lt;/li&gt;
&lt;li&gt;飲み会中の自然な笑顔画像を集めておく&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;1つ目の機能は、まさしく夢の&lt;strong&gt;ビールのオートデプロイ&lt;/strong&gt;です！！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/0qgHEBRne3GBTsPTkJn5MqAsYdFihI-3LTJSm8P33iOraRoy36An06qGGQo8pC5jKr0afMeqOFA=s800&#34; title=&#34;Demo&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;使ったもの:3fc30d4efb0f9f17a0ee9ad6f39c20bb&#34;&gt;使ったもの&lt;/h3&gt;

&lt;p&gt;主に以下のデバイス・APIを使用して作りました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://theta360.com/ja/about/theta/s.html&#34;&gt;THETA S&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.clarifai.com/&#34;&gt;Clarifaiの画像解析API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.smt.docomo.ne.jp/?p=docs.api.page&amp;amp;api_name=image_recognition&amp;amp;p_name=api_usage_scenario&#34;&gt;Docomoの画像認識API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;THETA Sは、以下のようにドキュメントに書かれているようにAPIが変更され、先代よりもAPIが扱いやすいものになっていました。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;RICOH THETA API v2は、Google社のOpen Spherical Camera API Version 1.0（OSC）に準拠しています。&lt;br /&gt;
&lt;a href=&#34;https://developers.theta360.com/ja/docs/v2/api_reference/&#34;&gt;https://developers.theta360.com/ja/docs/v2/api_reference/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Clarifaiは&lt;a href=&#34;https://cloud.google.com/vision/&#34;&gt;Google Cloud Vision&lt;/a&gt;のように、画像に写っている物体や状況に関する情報を返してくれるAPIを提供しています。
例えば以下のビール画像であれば&amp;rdquo;Beer, Glass, Foam, Cold, Drink, Indoor&amp;rdquo;といった情報が得られます。
泡があること、冷たいこと、室内であることも認識されていて驚きです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/g2L3vh5pcQrdyl-o5UrM8GZOgy7n6hfAjL5LHzB52Oz-uaKUHwwF2PQczrS2G_OUzAGTQExgBdM=s400&#34; title=&#34;Beer&#34;/&gt;&lt;/p&gt;

&lt;p&gt;動画にも同等のことができるようなので、そちらも使うと面白いことができそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.clarifai.com/#demo&#34;&gt;Clarifaiのデモ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://newdocs.clarifai.com/guide/info#info&#34;&gt;ClarifaiのAPIドキュメント&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;苦労したところ-工夫したところ:3fc30d4efb0f9f17a0ee9ad6f39c20bb&#34;&gt;苦労したところ・工夫したところ&lt;/h3&gt;

&lt;p&gt;Clarifaiの前は&lt;a href=&#34;https://cloud.google.com/vision/&#34;&gt;Google Cloud Vision&lt;/a&gt;の使用を検討していましたが審査が間に合いませんでした。
Google Cloud Visionは現在プレビュー版を提供している段階で、使用するには申請が必要です。
審査には時間がかかるので、利用を検討する方は早めに申し込んでおくと良いと思います。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;追記: Google Cloud Visionの&lt;a href=&#34;ttp://googlecloudplatform.blogspot.jp/2016/02/Google-Cloud-Vision-API-enters-beta-open-to-all-to-try.html&#34;&gt;ベータ版の提供が始まり&lt;/a&gt;、申請すればすぐ使えます。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ビールの認識精度も上がらずに思考錯誤をしました。
開発会場で撮影されたビール画像は、背景が白いためかオフィスの写真と判定されビールとなかなか判定されませんでした。
ここは背景に暗めの色の布を置くことで判定率が上がりました。
しかし、白い背景を黒でデータ上で塗りつぶしたり、画像からビールジョッキ部分だけの切り抜いただけではビールの判定率はあまり変わりませんでした。
実際の居酒屋でテストしたところ、ビールが持ち上げられて卓上から離れている時間以外はほぼ認識できていたので、暗めの部屋や十分な泡もビールっぽさとして必要なのかもしれません。&lt;/p&gt;

&lt;p&gt;また、開発会場内ではWifi使用者が多かったせいか、THETAのWifi転送速度が非常に遅かったため、デモの90秒以内に画像転送できるよう転送するサイズを小さくするといった工夫もしていました。
TEHTAはWifi接続してAPIを叩く必要があるため、操作するデバイスにはLANケーブルなど別のネットワークが必要なことも注意が必要です。&lt;/p&gt;

&lt;h3 id=&#34;さいごに:3fc30d4efb0f9f17a0ee9ad6f39c20bb&#34;&gt;さいごに&lt;/h3&gt;

&lt;p&gt;今回の作ったものはこちらのレポジトリに置いています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/housmart/kizukai&#34;&gt;https://github.com/housmart/kizukai&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;また、幸いにも入賞することができ、CerevoさんのHackeyを頂いたので、これを使ってまた何か作ったらレポートしようと思います！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/M4uyXV2O1J0hKXoqWvnah4stqPaOAQm9z2f9G-7Vb7Pd3FCTIRd2wrbJKcoWRyxvb2y4m018HWc=s400&#34; title=&#34;Hackey&#34;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/8e8SL2kEUFObnBivBczy_Pa10P5X5Jjfn2VVOc_WydnoSmQeuPyKi179CpDeaS-OVmny_u_rbrs=s800&#34; title=&#34;Hackey&#34;/&gt;&lt;/p&gt;

&lt;p&gt;Yahoo! Japanさん、非常に楽しいイベントをありがとうございました！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>カウルTech Blog開始！</title>
      <link>http://techblog.housmart.co.jp/2016/02/08/%E3%82%AB%E3%82%A6%E3%83%ABtech-blog%E9%96%8B%E5%A7%8B</link>
      <pubDate>Mon, 08 Feb 2016 17:45:55 +0900</pubDate>
      
      <guid>http://techblog.housmart.co.jp/2016/02/08/%E3%82%AB%E3%82%A6%E3%83%ABtech-blog%E9%96%8B%E5%A7%8B</guid>
      <description>

&lt;h2 id=&#34;ブログ始めました:b173e18a5e41cddcf9dae1b1b53c3f18&#34;&gt;ブログ始めました。&lt;/h2&gt;

&lt;p&gt;はじめまして！カウル開発チームの宮永と申します。&lt;/p&gt;

&lt;p&gt;本日よりカウルTech Blogを開始いたしました。&lt;/p&gt;

&lt;p&gt;サービスの裏側やシステムに関する技術的トピック、開発チームの雰囲気など&lt;br&gt;
カウル開発の「空気」のようなモノが伝わればよいかなと思っております。&lt;/p&gt;

&lt;p&gt;※Tech Blogとありますが、Techなことに特化しない回もあると思いますがあしからず。&lt;/p&gt;

&lt;p&gt;今回は第１回ということで自己紹介を。&lt;/p&gt;

&lt;h2 id=&#34;自己紹介:b173e18a5e41cddcf9dae1b1b53c3f18&#34;&gt;自己紹介&lt;/h2&gt;

&lt;p&gt;公式的な自己紹介はカウルのTOP（ &lt;a href=&#34;https://kawlu.com/market&#34;&gt;https://kawlu.com/market&lt;/a&gt; ）にありますので、
そちらとは異なるフランクな内容で行きたいと思います。&lt;/p&gt;

&lt;p&gt;私、宮永は福岡県北九州の生まれで根っからのサッカー小僧です。
幼稚園、小学校、中学校、高校、大学とサッカーを続け、サッカーに対する情熱は今も冷めておりません。&lt;/p&gt;

&lt;p&gt;ただ、東京はサッカーが出来るところも少ないので近年はフットサルがメインです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://techblog.housmart.co.jp/images/2016020804.png&#34; title=&#34;全員集合！&#34;&gt;
弊社の社員が勢揃いした写真です。
&lt;div style=&#34;margin-bottom:100px&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;開発の話へ:b173e18a5e41cddcf9dae1b1b53c3f18&#34;&gt;開発の話へ。。&lt;/h2&gt;

&lt;p&gt;このままだとサッカーブログになりそうなので、開発の話に戻ります。&lt;/p&gt;

&lt;p&gt;私は新卒（2011年）から5年ほど楽天株式会社でエンジニア、プロデューサとしてシステム開発を担当させていただきました。
学ぶ事が多く楽天では本当に充実した日々を過ごせたと思っております。&lt;/p&gt;

&lt;p&gt;好きな言語は・・という話もしたいのですが、本当に好みがなくどれでもやりだすと好きになります。
ですので、今はカウル開発でも使っているRubyは結構好きです。&lt;/p&gt;

&lt;p&gt;カウルではCTOという立派な役職を頂いておりますが、エンジニア業務がメインで
今は仕事をしております。
「とにかく世の中に役立つものを創りたい」欲が強く、今カウルの開発に携われている私は
なかなかの幸せ者であると思っております。&lt;/p&gt;

&lt;p&gt;圧倒的に自由な不動産市場の創造を目指し、やることは多いですが、
日々精進して大きなサービスとしていけるよう頑張ります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://techblog.housmart.co.jp/images/2016020803.JPG&#34; title=&#34;&#34;&gt;
頻繁にMTGを行い、カウルの改善点を洗い出ししています。
&lt;div style=&#34;margin-bottom:100px&#34;&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;最近ハマっていること:b173e18a5e41cddcf9dae1b1b53c3f18&#34;&gt;最近ハマっていること&lt;/h2&gt;

&lt;p&gt;弊社のオフィスは渋谷にあるのですが、とにかく飲食店が豊富で毎日昼食に困りません。
最近は社員皆で国際料理のお店巡りが流行ってます。
（ペルー、オーストラリア、ブラジルなどなど渋谷にはとにかく多くの国際料理店が存在します。）&lt;/p&gt;

&lt;h2 id=&#34;最後に:b173e18a5e41cddcf9dae1b1b53c3f18&#34;&gt;最後に&lt;/h2&gt;

&lt;p&gt;今回はこのくらいで終わりとさせていただきます。
引き続き、皆様どうぞよろしくお願いします。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>